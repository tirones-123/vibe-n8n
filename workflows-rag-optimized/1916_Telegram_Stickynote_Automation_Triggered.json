{
  "id": "mE7Zvhv1lOd4Q3xY",
  "meta": {
    "instanceId": "<UUID-chain>"
  },
  "name": "CoinMarketCap_AI_Data_Analyst_Agent",
  "tags": [],
  "nodes": [
    {
      "id": "1eab0bd5-8f9c-4bc4-92b7-50779baa505c",
      "name": "Telegram Send Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1180,
        0
      ],
      "webhookId": "0eeae020-ed6f-4900-ae38-d646d893171d",
      "parameters": {
        "text": "={{ $json.output }}",
        "chatId": "={{ $('Telegram Input').item.json.message.chat.id }}",
        "additionalFields": {}
      },
      "credentials": {
        "telegramApi": {
          "id": "<telegramApi-id>",
          "name": "Telegram account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "fd89fa7e-c4e1-4559-a0cc-42beaeccefb4",
      "name": "Adds SessionId",
      "type": "n8n-nodes-base.set",
      "position": [
        280,
        0
      ],
      "parameters": {
        "options": {},
        "assignments": {
          "assignments": [
            {
              "id": "b5c25cd4-226b-4778-863f-79b13b4a5202",
              "name": "sessionId",
              "type": "string",
              "value": "={{ $json.message.chat.id }}"
            }
          ]
        },
        "includeOtherFields": true
      },
      "typeVersion": 3.4
    },
    {
      "id": "aea9adc8-8215-4459-9bf0-5a6b6364ffcc",
      "name": "CoinMarketCap AI Data Analyst Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "notes": "{{ $json.sessionId }}",
      "position": [
        660,
        0
      ],
      "parameters": {
        "text": "={{ $json.message.text }}",
        "options": {
          "systemMessage": "You are the **CoinMarketCap AI Data Analyst**, a powerful, multi-source crypto intelligence system that integrates three specialized agents:  \n- **CoinMarketCap Crypto Agent**  \n- **CoinMarketCap Exchange & Community Agent**  \n- **CoinMarketCap DEXScan Agent**\n\nYour job is to provide accurate, real-time, and strategic insights into the cryptocurrency landscape across centralized and decentralized platforms.\n\n---\n\n### üõ†Ô∏è Tools and Agent Capabilities\n\nYou have access to a suite of **live CoinMarketCap APIs** organized by sub-agents. Each tool is mapped to an endpoint and validated for parameter safety to avoid 400 errors.\n\n---\n\n#### üîπ 1. CoinMarketCap Crypto Agent\n\n**Focus:** Cryptocurrency-level data, listings, quotes, and conversions.\n\n**Tools:**\n- `Crypto Map` ‚Äì Get coin IDs, names, symbols  \n- `Crypto Info` ‚Äì Metadata like whitepapers, socials  \n- `Crypto Listings` ‚Äì Top market cap coins  \n- `Quotes Latest` ‚Äì Live price, volume, market cap  \n- `Global Metrics` ‚Äì Total market stats, BTC dominance  \n- `Price Conversion` ‚Äì Convert one asset to another  \n\n‚úÖ Use for:  \n‚ÄúTop 10 coins by market cap,‚Äù ‚ÄúConvert 5 ETH to USD,‚Äù ‚ÄúBTC volume today,‚Äù ‚ÄúWhitepaper for SOL‚Äù\n\n---\n\n#### üîπ 2. CoinMarketCap Exchange & Community Agent\n\n**Focus:** Exchange intel, community sentiment, and market behavior.\n\n**Tools:**\n- `Exchange Map` ‚Äì Discover exchanges and get IDs  \n- `Exchange Info` ‚Äì Metadata like launch date, country, links  \n- `Exchange Assets` ‚Äì Exchange token holdings & wallets  \n- `CMC 100 Index` ‚Äì Latest CMC 100 index constituents  \n- `Fear and Greed Index` ‚Äì Market sentiment tracker  \n\n‚úÖ Use for:  \n‚ÄúWhich tokens does Binance hold?‚Äù ‚ÄúCurrent crypto sentiment‚Äù ‚ÄúTop 100 CMC coins‚Äù\n\n---\n\n#### üîπ 3. CoinMarketCap DEXScan Agent\n\n**Focus:** Decentralized trading data (spot pairs, pools, liquidity, OHLCV, trades).\n\n**Tools:**\n- `DEX Metadata` ‚Äì Info for any DEX (logo, date, description)  \n- `DEX Networks List` ‚Äì All blockchain networks  \n- `DEX Listings Quotes` ‚Äì DEXs with live trading stats  \n- `DEX Pair Quotes Latest` ‚Äì Live price/liquidity for spot pairs  \n- `DEX OHLCV Historical` ‚Äì Historical OHLCV (e.g., 1h, 1d)  \n- `DEX OHLCV Latest` ‚Äì Real-time OHLCV for current UTC day  \n- `DEX Trades Latest` ‚Äì Up to 100 recent trades  \n- `DEX Spot Pairs Latest` ‚Äì All active spot pairs with filters  \n\n‚úÖ Use for:  \n‚ÄúPrice history of USDT/ETH on Uniswap,‚Äù ‚ÄúShow DEXs with highest volume,‚Äù ‚ÄúGet liquidity of token pair,‚Äù ‚ÄúSecurity scan for PancakeSwap pools‚Äù\n\n---\n\n### ‚öôÔ∏è Multi-Agent Coordination (Advanced Multi-Query Reasoning)\n\nYou are empowered with **advanced multi-query analysis** capabilities:\n- Chain data between agents (e.g., map ‚Üí quote ‚Üí historical chart)\n- Use outputs from one tool as inputs for another\n- Automatically fetch required IDs (e.g., exchange ID, contract address) before making a final API call\n- Combine centralized (CEX) and decentralized (DEX) insights into one unified response\n- Filter and compare across timeframes, assets, exchanges, and networks\n\n---\n\n### ‚ö†Ô∏è Validation & Error Prevention Guidelines\n\nTo prevent 400 Bad Request errors:\n- Always include at least **one required field** per endpoint  \n- Use **valid slugs, symbols, or CoinMarketCap IDs**  \n- Don‚Äôt use `convert` and `convert_id` together  \n- Use **comma-separated lists** for multi-inputs (if allowed)  \n- Use documented `aux`, `sort`, `interval` fields only  \n- Handle pagination via `scroll_id` or `start/limit` properly  \n\nIf output is too large:\n> ‚ö†Ô∏è ‚ÄúThe requested data exceeds the model‚Äôs context limit. Please reduce the scope using filters, limits, or sort.‚Äù\n\n---\n\n### ‚úÖ Example Tasks You Can Perform\n- ‚ÄúGet liquidity and 24h volume for ETH/USDC on Polygon‚Äù\n- ‚ÄúCompare BTC price on Binance vs Uniswap‚Äù\n- ‚ÄúShow top 5 DEXs by volume and their top pairs‚Äù\n- ‚ÄúAnalyze historical price of SHIBA on Ethereum over last 7 days‚Äù\n- ‚ÄúGet CoinMarketCap‚Äôs sentiment index and top index coins‚Äù\n- ‚ÄúList active spot pairs on Arbitrum with volume > $1M and return price, liquidity, and last 24h % change‚Äù\n\n---\n\nYou are a **real-time, multi-source AI analyst** purpose-built to extract deep insights from CoinMarketCap‚Äôs centralized and decentralized datasets. Use your agents intelligently, validate your queries, and return precise, structured results.\n\nLet‚Äôs analyze the crypto world. üåçüìäüß†\n"
        },
        "promptType": "define"
      },
      "typeVersion": 1.7
    },
    {
      "id": "955f82c6-ce76-4d56-9714-4926a4936cbf",
      "name": "CoinMarketCap Agent Brain",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        420,
        280
      ],
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "<openAiApi-id>",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "2c253e1f-5a34-4334-8a8a-98c1e9e937cd",
      "name": "CoinMarketCap Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        580,
        280
      ],
      "parameters": {},
      "typeVersion": 1.3
    },
    {
      "id": "0878a84b-14a3-4f8e-b94d-339b1c759f4d",
      "name": "CoinMarketCap Crypto Agent Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        740,
        280
      ],
      "parameters": {
        "name": "CoinMarketCap_Crypto_Agent_Tool",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "R4EuB1gx1IpMXCJM",
          "cachedResultName": "JayaFamily Assistant ‚Äî CoinMarketCap_Crypto_Agent_Tool"
        },
        "workflowInputs": {
          "value": {
            "message": "={{ $fromAI(\"message\",\"Populate this with a relevant message to this subagent\")}}",
            "sessionId": "={{ $json.sessionId }}"
          },
          "schema": [
            {
              "id": "message",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "message",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "sessionId",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "sessionId",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "4a6e4ae9-5ba5-48ab-8198-a7cd8c84b0ee",
      "name": "CoinMarketCap Exchange and Community Agent Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        900,
        280
      ],
      "parameters": {
        "name": "CoinMarketCap_Exchange_and_Community_Agent_Tool",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "kbJb4VMD3SZlcS2u",
          "cachedResultName": "JayaFamily Assistant ‚Äî CoinMarketCap_Exchange_and_Community_Agent_Tool"
        },
        "workflowInputs": {
          "value": {
            "message": "={{ $fromAI(\"message\",\"Populate this with a relevant message to this subagent\")}}",
            "sessionId": "={{ $json.sessionId }}"
          },
          "schema": [
            {
              "id": "sessionId",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "sessionId",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "message",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "77ffefe3-9671-4155-baed-d782035b6079",
      "name": "CoinMarketCap DEXScan Agent Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        1080,
        280
      ],
      "parameters": {
        "name": "CoinMarketCap_DEXScan_Agent_Tool",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "ImiznkEUWCkKbg1w",
          "cachedResultName": "JayaFamily Assistant ‚Äî CoinMarketCap_DEXScan_Agent_Tool"
        },
        "workflowInputs": {
          "value": {
            "message": "={{ $fromAI(\"message\",\"Populate this with a relevant message to this subagent\")}}",
            "sessionId": "={{ $json.sessionId }}"
          },
          "schema": [
            {
              "id": "sessionId",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "sessionId",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "message",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "message",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "d3fc4697-478b-4e6e-8d42-8138ec614748",
      "name": "Telegram Input",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -220,
        0
      ],
      "webhookId": "b33d2025-01c2-4386-b677-206a87a1856b",
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "credentials": {
        "telegramApi": {
          "id": "<telegramApi-id>",
          "name": "Telegram account"
        }
      },
      "typeVersion": 1.1
    }
  ],
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "connections": {
    "Adds SessionId": {
      "main": [
        [
          {
            "node": "CoinMarketCap AI Data Analyst Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Input": {
      "main": [
        [
          {
            "node": "Adds SessionId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CoinMarketCap Memory": {
      "ai_memory": [
        [
          {
            "node": "CoinMarketCap AI Data Analyst Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "CoinMarketCap Agent Brain": {
      "ai_languageModel": [
        [
          {
            "node": "CoinMarketCap AI Data Analyst Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "CoinMarketCap Crypto Agent Tool": {
      "ai_tool": [
        [
          {
            "node": "CoinMarketCap AI Data Analyst Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CoinMarketCap DEXScan Agent Tool": {
      "ai_tool": [
        [
          {
            "node": "CoinMarketCap AI Data Analyst Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CoinMarketCap AI Data Analyst Agent": {
      "main": [
        [
          {
            "node": "Telegram Send Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CoinMarketCap Exchange and Community Agent Tool": {
      "ai_tool": [
        [
          {
            "node": "CoinMarketCap AI Data Analyst Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  }
}