{
  "meta": {
    "instanceId": "<UUID-chain>"
  },
  "nodes": [
    {
      "id": "07a4dc07-0109-464e-a661-d5a4bb7b4a1c",
      "name": "Get message content1",
      "type": "n8n-nodes-base.gmail",
      "position": [
        640,
        460
      ],
      "parameters": {
        "simple": false,
        "options": {},
        "messageId": "={{ $json.id }}",
        "operation": "get"
      },
      "credentials": {
        "gmailOAuth2": {
          "id": "<gmailOAuth2-id>",
          "name": "Gmail Omar"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "283dcd8b-80a8-4e49-aba1-fabec333def3",
      "name": "OpenAI Chat Model3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        1120,
        640
      ],
      "parameters": {
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "<openAiApi-id>",
          "name": "OpenAi account"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "71897790-5ee8-4f15-bc4e-26a987b79505",
      "name": "Delete the unnecessary items",
      "type": "n8n-nodes-base.code",
      "position": [
        880,
        460
      ],
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n delete item.json.threadId;\n delete item.json.labelIds;\n delete item.json.sizeEstimate;\n delete item.json.headers;\n delete item.json.html;\n delete item.json.to;\n delete item.json.cc;\n delete item.json.replyTo;\n delete item.json.messageId;\n delete item.json.id;\n delete item.json.textAsHtml;\n delete item.json.date;\n\n}\n\nreturn $input.all();"
      },
      "typeVersion": 2
    },
    {
      "id": "187704ba-ddc1-447e-99f6-8335b039dca3",
      "name": "Aggregate in same cell",
      "type": "n8n-nodes-base.aggregate",
      "position": [
        1400,
        660
      ],
      "parameters": {
        "options": {
          "includeBinaries": true
        },
        "aggregate": "aggregateAllItemData"
      },
      "typeVersion": 1
    },
    {
      "id": "a8cba2a0-e751-4dc4-8cc1-9b91c587b1bc",
      "name": "Gmail trigger",
      "type": "n8n-nodes-base.gmailTrigger",
      "position": [
        440,
        460
      ],
      "parameters": {
        "simple": false,
        "filters": {
          "labelIds": [
            "CATEGORY_PROMOTIONS"
          ]
        },
        "options": {},
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        }
      },
      "credentials": {
        "gmailOAuth2": {
          "id": "<gmailOAuth2-id>",
          "name": "Gmail Omar"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "f0809138-4bde-4132-97b2-0810b920ed7a",
      "name": "Convert from base64 to File",
      "type": "n8n-nodes-base.convertToFile",
      "position": [
        1660,
        140
      ],
      "parameters": {
        "options": {},
        "operation": "toBinary",
        "sourceProperty": "data"
      },
      "typeVersion": 1.1
    },
    {
      "id": "2efdd685-57fe-4f5c-b295-183dddfeb0d6",
      "name": "Merge Text with Audio",
      "type": "n8n-nodes-base.merge",
      "position": [
        1720,
        440
      ],
      "parameters": {},
      "typeVersion": 2.1
    },
    {
      "id": "c59a00fd-c7c7-4dc5-91d1-492bd7715731",
      "name": "Send Message to Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1720,
        660
      ],
      "parameters": {
        "chatId": "53739339",
        "operation": "sendAudio",
        "binaryData": true,
        "additionalFields": {
          "caption": "={{ $json.data[1].response.text }}",
          "fileName": "New Message on Gmail"
        },
        "binaryPropertyName": "=data"
      },
      "credentials": {
        "telegramApi": {
          "id": "<telegramApi-id>",
          "name": "aqsati services"
        }
      },
      "typeVersion": 1.1
    },
    {
      "id": "3f3a1209-9787-41c3-af10-3f3e44a89c9b",
      "name": "Summarization Chain3",
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "position": [
        1120,
        460
      ],
      "parameters": {
        "options": {
          "summarizationMethodAndPrompts": {
            "values": {
              "prompt": "Craft a concise newsletter using the given content. Include emojis, avoid starting with the subject word, summarize linked articles briefly, and ensure it's under 247 characters for easy TTS readability, and after that chick if it's very short to pass it:\n\n\n\n\"{text}\"\n\n\n",
              "combineMapPrompt": "Craft a concise newsletter using the given content. Include emojis, avoid starting with the subject word, summarize linked articles briefly, and ensure it's under 247 characters for easy TTS readability, and after that chick if it's very short to pass it:\n\n\n\"{text}\"\n\n\n"
            }
          }
        },
        "chunkingMode": "advanced"
      },
      "typeVersion": 2
    },
    {
      "id": "f1e063a5-0e0e-4f8e-b8bc-e940db622843",
      "name": "Text to  TTS",
      "type": "n8n-nodes-base.httpRequest",
      "onError": "continueErrorOutput",
      "position": [
        1460,
        140
      ],
      "parameters": {
        "url": "https://tiktok-tts.weilnet.workers.dev/api/generation",
        "method": "POST",
        "options": {
          "allowUnauthorizedCerts": true
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.response.text }}"
            },
            {
              "name": "voice",
              "value": "en_us_001"
            }
          ]
        }
      },
      "retryOnFail": false,
      "typeVersion": 4.1,
      "alwaysOutputData": false
    }
  ],
  "connections": {
    "Text to  TTS": {
      "main": [
        [
          {
            "node": "Convert from base64 to File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Summarization Chain3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail trigger": {
      "main": [
        [
          {
            "node": "Get message content1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Summarization Chain3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get message content1": {
      "main": [
        [
          {
            "node": "Delete the unnecessary items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarization Chain3": {
      "main": [
        [
          {
            "node": "Merge Text with Audio",
            "type": "main",
            "index": 1
          },
          {
            "node": "Text to  TTS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Text with Audio": {
      "main": [
        [
          {
            "node": "Aggregate in same cell",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate in same cell": {
      "main": [
        [
          {
            "node": "Send Message to Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert from base64 to File": {
      "main": [
        [
          {
            "node": "Merge Text with Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete the unnecessary items": {
      "main": [
        [
          {
            "node": "Summarization Chain3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}