{
  "meta": {
    "instanceId": "<UUID-chain>"
  },
  "nodes": [
    {
      "id": "b5f24526-f1fc-43b0-82bf-887288838304",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -2560,
        540
      ],
      "webhookId": "09021985-57be-46c0-ac3d-c3a029ebf9e9",
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "typeVersion": 1.1
    },
    {
      "id": "8bb53ae0-515a-493d-9c1a-8a06362ada2e",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        -2340,
        540
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "a0be860f-a9ae-4a49-b478-dac25bd550e2",
              "operator": {
                "type": "string",
                "operation": "startsWith"
              },
              "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
              "rightValue": "/"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "2bba3d64-03b7-4875-ac13-d4be13d2aa6d",
      "name": "Deep Work",
      "type": "n8n-nodes-base.wait",
      "position": [
        -1680,
        460
      ],
      "webhookId": "e4e8c51c-286e-47ff-809c-510069debd56",
      "parameters": {
        "unit": "minutes",
        "amount": 25
      },
      "typeVersion": 1.1
    },
    {
      "id": "bc3ea269-cbc5-4c7d-8ea1-74413883e425",
      "name": "Break",
      "type": "n8n-nodes-base.wait",
      "position": [
        -1340,
        460
      ],
      "webhookId": "3d3e199b-257c-4517-ab36-3e32242dabf8",
      "parameters": {
        "unit": "minutes"
      },
      "typeVersion": 1.1
    },
    {
      "id": "da225392-cd09-4afb-ba56-816484c742ae",
      "name": "Initiate Static Data",
      "type": "n8n-nodes-base.code",
      "notes": "You only need to run the initialization step once per workflow, regardless of the number of Telegram chat IDs. The initialization creates the telegramStates object within the global static data of the workflow. Once that object exists, the workflow will use it to store the state for any chat ID.",
      "position": [
        -2540,
        -160
      ],
      "parameters": {
        "jsCode": "let workflowStaticData = $getWorkflowStaticData('global');\nif (!workflowStaticData.telegramStates) {\n    workflowStaticData.telegramStates = {}; \n}\nreturn workflowStaticData;\n"
      },
      "notesInFlow": false,
      "typeVersion": 2
    },
    {
      "id": "b4f1ae18-ff8d-4b1d-8c26-8e3f87350d2d",
      "name": "Increment Count",
      "type": "n8n-nodes-base.code",
      "position": [
        -1180,
        460
      ],
      "parameters": {
        "jsCode": "let workflowStaticData = $getWorkflowStaticData('global');\n\nif (!workflowStaticData.telegramStates) {\n    workflowStaticData.telegramStates = {}; \n}\n\nlet userId = $('Telegram Trigger').first().json.message.chat.id.toString();\n\n// Ensure the user object exists\nif (!workflowStaticData.telegramStates[userId]) {\n    workflowStaticData.telegramStates[userId] = { count: 0, sessionId: \"\", startTime: \"\" };\n}\n\n// Check if sessionId is missing, then generate one\nif (!workflowStaticData.telegramStates[userId].sessionId) {\n    workflowStaticData.telegramStates[userId].sessionId = Date.now().toString(36) + Math.random().toString(36).substring(2, 8);\n    workflowStaticData.telegramStates[userId].startTime = new Date().toISOString();\n}\n\n// Increment the Pomodoro count\nworkflowStaticData.telegramStates[userId].count += 1;\n\n// Return the updated session details\nreturn [\n    {\n        json: {\n            count: workflowStaticData.telegramStates[userId].count,\n            sessionId: workflowStaticData.telegramStates[userId].sessionId,\n            startTime: workflowStaticData.telegramStates[userId].startTime\n        }\n    }\n];\n"
      },
      "typeVersion": 2
    },
    {
      "id": "5315d3fc-9c1e-4f3d-9e00-81f806d84e6a",
      "name": "Record Deep Work",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -720,
        400
      ],
      "parameters": {
        "columns": {
          "value": {
            "Date": "={{ $now.format('dd-LL-yyyy') }}",
            "Time": "={{ $now.hour.toString().padStart(2, '0') }}:{{ $now.minute.toString().padStart(2, '0') }} ",
            "User ID": "={{ $json.result.chat.id }}",
            "Block Type": "Deep Work",
            "Pomodoro Count": "={{ $('Increment Count').item.json.count }}",
            "Working Session ID": "={{ $('Increment Count').item.json.sessionId }}",
            "Break Duration (min)": "5",
            "Focus Duration (min)": "25"
          },
          "schema": [
            {
              "id": "Date",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Time",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Time",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "User ID",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "User ID",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Working Session ID",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Working Session ID",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Block Type",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Block Type",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Pomodoro Count",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Pomodoro Count",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Focus Duration (min)",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Focus Duration (min)",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Break Duration (min)",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Break Duration (min)",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "append",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "=",
          "cachedResultName": "="
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "=",
          "cachedResultUrl": "=",
          "cachedResultName": "="
        }
      },
      "notesInFlow": true,
      "typeVersion": 4.5
    },
    {
      "id": "7328bccb-bb00-42bb-9659-6f66600894cc",
      "name": "Record Long Break",
      "type": "n8n-nodes-base.googleSheets",
      "position": [
        -120,
        460
      ],
      "parameters": {
        "columns": {
          "value": {
            "Date": "={{ $now.format('dd-LL-yyyy') }}",
            "Time": "={{ $now.hour.toString().padStart(2, '0') }}:{{ $now.minute.toString().padStart(2, '0') }} ",
            "User ID": "={{ $json.result.chat.id }}",
            "Block Type": "Long Break",
            "Pomodoro Count": "={{ $('Increment Count').item.json.count }}",
            "Working Session ID": "={{ $('Increment Count').item.json.sessionId }}",
            "Break Duration (min)": "15",
            "Focus Duration (min)": "0"
          },
          "schema": [
            {
              "id": "Date",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Date",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Time",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Time",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "User ID",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "User ID",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Working Session ID",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Working Session ID",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Block Type",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Block Type",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Pomodoro Count",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Pomodoro Count",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Focus Duration (min)",
              "type": "string",
              "display": true,
              "required": false,
              "displayName": "Focus Duration (min)",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            },
            {
              "id": "Break Duration (min)",
              "type": "string",
              "display": true,
              "removed": false,
              "required": false,
              "displayName": "Break Duration (min)",
              "defaultMatch": false,
              "canBeUsedToMatch": true
            }
          ],
          "mappingMode": "defineBelow",
          "matchingColumns": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {},
        "operation": "append",
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": "gid=0",
          "cachedResultUrl": "=",
          "cachedResultName": "="
        },
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": "=",
          "cachedResultUrl": "=",
          "cachedResultName": "="
        }
      },
      "typeVersion": 4.5
    },
    {
      "id": "2d45a378-7188-4ac2-bb2e-c0ba745794d7",
      "name": "Instructions Message",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -2160,
        660
      ],
      "webhookId": "a4c1043e-0520-4ef6-994c-6e733f90827b",
      "parameters": {
        "text": "=💡 Oops! That’s not a valid command.\n\nHere’s what you can do:\n✅ /start – Kick off a Pomodoro session and get in the zone.\n✅ /stop – Wrap up your session like a productivity pro.\n\nNow, let’s get some deep work done! 🔥💻",
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "additionalFields": {}
      },
      "notesInFlow": true,
      "typeVersion": 1.2
    },
    {
      "id": "6d4f131c-076e-4d0a-9738-847692557468",
      "name": "start or stop?",
      "type": "n8n-nodes-base.if",
      "position": [
        -2160,
        460
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "f169eadd-424b-42b0-8229-615608ecb23c",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $('Telegram Trigger').item.json.message.text }}",
              "rightValue": "/start"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "6a7b7b74-61b0-40de-8def-7bc602302d05",
      "name": "Long Break Notification",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -440,
        520
      ],
      "webhookId": "251e850d-fcad-4fe8-a335-001ff1677415",
      "parameters": {
        "text": "🍴 Time for a long break. Great job!",
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "fc63c241-53ee-4443-9a8c-a8f8a5da992b",
      "name": "Clear Variables1",
      "type": "n8n-nodes-base.code",
      "position": [
        -1680,
        760
      ],
      "parameters": {
        "jsCode": "let workflowStaticData = $getWorkflowStaticData('global');\nif (workflowStaticData.telegramStates) {\n    delete workflowStaticData.telegramStates[$('Telegram Trigger').first().json.message.chat.id.toString()];\n}\n\nreturn $input.all();"
      },
      "typeVersion": 2
    },
    {
      "id": "12297308-57ca-493f-8e65-49e396042893",
      "name": "Clear Variables2",
      "type": "n8n-nodes-base.code",
      "position": [
        -120,
        640
      ],
      "parameters": {
        "jsCode": "let workflowStaticData = $getWorkflowStaticData('global');\nif (workflowStaticData.telegramStates) {\n    delete workflowStaticData.telegramStates[$('Telegram Trigger').first().json.message.chat.id.toString()];\n}\n\nreturn $input.all();"
      },
      "typeVersion": 2
    },
    {
      "id": "46ab1b8b-c9be-4da9-a470-d1a4c9fcc219",
      "name": "< 4 Cycles",
      "type": "n8n-nodes-base.if",
      "position": [
        -720,
        540
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "307c1ccf-9a10-49e6-a59d-d250edb1cae5",
              "operator": {
                "type": "number",
                "operation": "gt"
              },
              "leftValue": "={{ $('Increment Count').item.json.count }}",
              "rightValue": 4
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "22752905-50fc-48ee-9b4c-f80e6184c17f",
      "name": "Short Break Notification",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1520,
        460
      ],
      "webhookId": "b436cc4e-83d8-4bfa-9de9-e37cde83f9f9",
      "parameters": {
        "text": "🚰 Work session complete! Take a short break.",
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "d43993be-ae96-4f83-8047-fffc956d2bac",
      "name": "Back to Work Notification",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1000,
        460
      ],
      "webhookId": "d13ad958-abf2-46a8-8785-da369933de24",
      "parameters": {
        "text": "=🏢 Break over! Back to work for the cycle: {{ $json.count }}",
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "480f9003-3c1d-44a1-8552-8b59d9d074af",
      "name": "Start Cycle Notification",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1840,
        460
      ],
      "webhookId": "16fa6143-2d4e-44b5-b0d0-3d58bc6022a8",
      "parameters": {
        "text": "⏰ Time to focus! 25 minutes of deep work starts now.",
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "typeVersion": 1.2
    },
    {
      "id": "b0ce8b4c-7e41-47f6-b505-46fdf606b84d",
      "name": "End of Session Notification",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -1860,
        760
      ],
      "webhookId": "126e70c5-ea40-4bd5-81ee-5ca459db6a0d",
      "parameters": {
        "text": "=🛑 You decided to stop the session early.\n🚀 Use /start to relaunch a working session.",
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "notesInFlow": true,
      "retryOnFail": false,
      "typeVersion": 1.2
    }
  ],
  "connections": {
    "If": {
      "main": [
        [
          {
            "node": "start or stop?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Instructions Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Break": {
      "main": [
        [
          {
            "node": "Increment Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deep Work": {
      "main": [
        [
          {
            "node": "Short Break Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "< 4 Cycles": {
      "main": [
        [
          {
            "node": "Long Break Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Start Cycle Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "start or stop?": {
      "main": [
        [
          {
            "node": "Start Cycle Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "End of Session Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Increment Count": {
      "main": [
        [
          {
            "node": "Back to Work Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Long Break Notification": {
      "main": [
        [
          {
            "node": "Clear Variables2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Record Long Break",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Short Break Notification": {
      "main": [
        [
          {
            "node": "Break",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Cycle Notification": {
      "main": [
        [
          {
            "node": "Deep Work",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Back to Work Notification": {
      "main": [
        [
          {
            "node": "< 4 Cycles",
            "type": "main",
            "index": 0
          },
          {
            "node": "Record Deep Work",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "End of Session Notification": {
      "main": [
        [
          {
            "node": "Clear Variables1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}