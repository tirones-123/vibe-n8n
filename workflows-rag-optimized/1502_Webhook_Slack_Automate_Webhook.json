{
  "meta": {
    "instanceId": "<UUID-chain>"
  },
  "nodes": [
    {
      "id": "96ef3bfe-a493-4377-b090-6b2d02d87480",
      "name": "Verify Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "position": [
        1420,
        800
      ],
      "parameters": {
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-type",
                "value": "application/json"
              }
            ]
          }
        },
        "respondWith": "json",
        "responseBody": "={\"challenge\":\"{{ $json.body.challenge }}\"}"
      },
      "typeVersion": 1
    },
    {
      "id": "38db6da6-13bf-47a1-b5cb-f06403b309ac",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        2120,
        1220
      ],
      "parameters": {
        "model": "gpt-4o",
        "options": {}
      },
      "credentials": {
        "openAiApi": {
          "id": "<openAiApi-id>",
          "name": "Marketing OpenAI"
        }
      },
      "typeVersion": 1
    },
    {
      "id": "139b606d-29ae-480d-bde7-458ef45dba01",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1840,
        700
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "64acd4c6-cd53-46e5-a29e-40884044b186",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        2800,
        1220
      ],
      "parameters": {
        "sessionKey": "={{ $('Receive DMs').item.json[\"body\"][\"event\"][\"channel\"] }}",
        "sessionIdType": "customKey",
        "contextWindowLength": 10
      },
      "typeVersion": 1.2
    },
    {
      "id": "e605864f-198e-4358-8333-50ed962d4e50",
      "name": "Check if Bot",
      "type": "n8n-nodes-base.if",
      "position": [
        1640,
        800
      ],
      "parameters": {
        "options": {},
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "89ed1b2a-5e42-4196-989d-f7f81df04b6d",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.body.event.user }}",
              "rightValue": ""
            }
          ]
        }
      },
      "typeVersion": 2
    },
    {
      "id": "8479c41e-b251-4f32-8daa-421969c4c8b3",
      "name": "Send Initial Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        2140,
        820
      ],
      "parameters": {
        "text": "On it! Let me check Confluence to see if there are any relevant links to answer your question. ",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Receive DMs').item.json[\"body\"][\"event\"][\"channel\"] }}"
        },
        "otherOptions": {
          "botProfile": {
            "imageValues": {
              "icon_url": "https://avatars.slack-edge.com/2024-08-30/7671440019297_d6ce97ff3ab5a3abf9c1_72.jpg",
              "profilePhotoType": "image"
            }
          },
          "includeLinkToWorkflow": false
        }
      },
      "credentials": {
        "slackApi": {
          "id": "<slackApi-id>",
          "name": "helphub n8n labs auth"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "dcd325b1-1ee8-4133-9a6e-8b37bf20d056",
      "name": "Delete Initial Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        2960,
        760
      ],
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Receive DMs').item.json[\"body\"][\"event\"][\"channel\"] }}"
        },
        "operation": "delete",
        "timestamp": "={{ $('Send Initial Message').item.json[\"message_timestamp\"] }}"
      },
      "credentials": {
        "slackApi": {
          "id": "<slackApi-id>",
          "name": "helphub n8n labs auth"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "8d3ac15c-b0bc-459c-9523-685b7f498efb",
      "name": "Send Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        3160,
        760
      ],
      "parameters": {
        "text": "={{ $('AI Agent').item.json.output.replace(/\\[(.+?)\\]\\((.+?)\\)/g, '<$2|$1>').replace(/\\*\\*(.+?)\\*\\*/g, '*$1*') }}",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $('Receive DMs').item.json[\"body\"][\"event\"][\"channel\"] }}"
        },
        "otherOptions": {
          "botProfile": {
            "imageValues": {
              "icon_url": "https://avatars.slack-edge.com/2024-08-30/7671440019297_d6ce97ff3ab5a3abf9c1_72.jpg",
              "profilePhotoType": "image"
            }
          },
          "includeLinkToWorkflow": false
        }
      },
      "credentials": {
        "slackApi": {
          "id": "<slackApi-id>",
          "name": "helphub n8n labs auth"
        }
      },
      "typeVersion": 2.1
    },
    {
      "id": "16b79887-8218-4056-8add-39ebee6166bd",
      "name": "Receive DMs",
      "type": "n8n-nodes-base.webhook",
      "position": [
        1200,
        800
      ],
      "webhookId": "44c26a10-d54a-46ce-a522-5d83e8a854be",
      "parameters": {
        "path": "44c26a10-d54a-46ce-a522-5d83e8a854be",
        "options": {},
        "httpMethod": "POST",
        "responseMode": "responseNode"
      },
      "typeVersion": 2
    },
    {
      "id": "201b5399-6fff-48ca-81f0-a5cfc02c46d5",
      "name": "Call Confluence Workflow Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        3380,
        1280
      ],
      "parameters": {
        "name": "confluence_kb_search",
        "workflowId": {
          "__rl": true,
          "mode": "list",
          "value": "Pxzc65WaCPn2yB5I",
          "cachedResultName": "KB Tool - Confluence KB"
        },
        "description": "Call this tool to search n8n-labs confluence knowledge base. The input should be the user prompt reduced into 1 to 3 keywords to use for a KB search. These words should be words that are most likely to be contained in the text of a KB article that is helpful based on the user prompt. The words should be the only response and they should just be separated by a space."
      },
      "typeVersion": 1.2
    },
    {
      "id": "41026e03-5844-4e57-86bf-fc7e586265a4",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        2500,
        820
      ],
      "parameters": {
        "text": "={{ $('Receive DMs').item.json.body.event.text }}",
        "options": {
          "humanMessage": "TOOLS\n------\nAssistant can ask the user to use tools to look up information that may be helpful in answering the users original question. The tools the human can use are:\n\n{tools}\n\nIf no response is given for a given tool or the response is an error, then do not reference the tool results and instead ask for more context. \n\nThe tools currently search Notion and returns back a list of results. Please try to respond using the most relevant result URL to guide the user to the right answer. \n\nIf you are not sure, let the user know you were unable to find a notion page for them to help, but give them the top results that are relevant to their request.\n\nPlease summarize the results and return all the URLs exactly as you get them from the tool. Please format all links you send in this format: <url|name of url> \nAdditionally, here are other formatting layouts to use: \n_italic_ will produce italicized text\n*bold* will produce bold text\n~strike~ will produce strikethrough text\n\n{format_instructions}\n\nUSER'S INPUT\n--------------------\nHere is the user's input (remember to respond with a slack flavored (see above for more details) code snippet of a json blob with a single action, and NOTHING else):\n\n{{input}}\n",
          "maxIterations": 2,
          "systemMessage": "You are Knowledge Ninja, a specialized IT support tool developed to streamline interactions between employees and the IT department and the company knowledge base. \n\nDesigned with efficiency in mind, Knowledge Ninja is equipped to handle a variety of IT-related queries, from sales competition analysis to troubleshooting to more complex technical guidance.\n\nAs a dynamic knowledge tool, Knowledge Ninja utilizes a comprehensive internal knowledge base that can be tailored to your organization's specific IT infrastructure and policies. \n\nThis allows it to deliver precise and contextually relevant information swiftly, enhancing the support process.\n\nKnowledge Ninja is continuously updated to reflect the latest IT standards and practices, ensuring that the guidance it provides is both accurate and up-to-date. \n\nIts capabilities include understanding detailed queries, providing step-by-step troubleshooting instructions, and clarifying IT policies.\n\nPlease format all links you send in this format: <url|name of url> \nAdditionally, here are other formatting layouts to use: \n_italic_ will produce italicized text\n*bold* will produce bold text\n~strike~ will produce strikethrough text"
        },
        "promptType": "define"
      },
      "typeVersion": 1.5
    }
  ],
  "connections": {
    "AI Agent": {
      "main": [
        [
          {
            "node": "Delete Initial Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Receive DMs": {
      "main": [
        [
          {
            "node": "Verify Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Bot": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Initial Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify Webhook": {
      "main": [
        [
          {
            "node": "Check if Bot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Send Initial Message": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Delete Initial Message": {
      "main": [
        [
          {
            "node": "Send Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Confluence Workflow Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  }
}