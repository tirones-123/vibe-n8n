{
  "displayName": "Airtable",
  "group": [
    "input"
  ],
  "description": "Read, update, write and delete data from Airtable",
  "defaultVersion": 2.1,
  "version": [
    2,
    2.1
  ],
  "subtitle": "={{ $parameter[\"operation\"] + \": \" + $parameter[\"resource\"] }}",
  "defaults": {
    "name": "Airtable"
  },
  "inputs": [
    "main"
  ],
  "outputs": [
    "main"
  ],
  "credentials": [
    {
      "name": "airtableTokenApi",
      "required": true,
      "displayOptions": {
        "show": {
          "authentication": [
            "airtableTokenApi"
          ]
        }
      }
    },
    {
      "name": "airtableOAuth2Api",
      "required": true,
      "displayOptions": {
        "show": {
          "authentication": [
            "airtableOAuth2Api"
          ]
        }
      }
    }
  ],
  "properties": [
    {
      "displayName": "Authentication",
      "name": "authentication",
      "type": "options",
      "options": [
        {
          "name": "Access Token",
          "value": "airtableTokenApi"
        },
        {
          "name": "OAuth2",
          "value": "airtableOAuth2Api"
        }
      ],
      "default": "airtableTokenApi"
    },
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Base",
          "value": "base"
        },
        {
          "name": "Record",
          "value": "record"
        }
      ],
      "default": "record"
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a new record in a table",
          "action": "Create a record"
        },
        {
          "name": "Create or Update",
          "value": "upsert",
          "description": "Create a new record, or update the current one if it already exists (upsert)",
          "action": "Create or update a record"
        },
        {
          "name": "Delete",
          "value": "deleteRecord",
          "description": "Delete a record from a table",
          "action": "Delete a record"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Retrieve a record from a table",
          "action": "Get a record"
        },
        {
          "name": "Search",
          "value": "search",
          "description": "Search for specific records or list all",
          "action": "Search records"
        },
        {
          "name": "Update",
          "value": "update",
          "description": "Update a record in a table",
          "action": "Update record"
        }
      ],
      "default": "get",
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ]
        }
      }
    },
    {
      "displayName": "Base",
      "name": "base",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "required": true,
      "modes": [
        {
          "displayName": "From List",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "baseSearch",
            "searchable": true
          }
        },
        {
          "displayName": "By URL",
          "name": "url",
          "type": "string",
          "placeholder": "e.g. https://airtable.com/app12DiScdfes/tbl9WvGeEPa6lZyVq/viwHdfasdfeieg5p",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "https://airtable.com/([a-zA-Z0-9]{2,})/.*",
                "errorMessage": "Not a valid Airtable Base URL"
              }
            }
          ],
          "extractValue": {
            "type": "regex",
            "regex": "https://airtable.com/([a-zA-Z0-9]{2,})"
          }
        },
        {
          "displayName": "ID",
          "name": "id",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "[a-zA-Z0-9]{2,}",
                "errorMessage": "Not a valid Airtable Base ID"
              }
            }
          ],
          "placeholder": "e.g. appD3dfaeidke",
          "url": "=https://airtable.com/{{$value}}"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ]
        }
      }
    },
    {
      "displayName": "Table",
      "name": "table",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "required": true,
      "typeOptions": {
        "loadOptionsDependsOn": [
          "base.value"
        ]
      },
      "modes": [
        {
          "displayName": "From List",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "tableSearch",
            "searchable": true
          }
        },
        {
          "displayName": "By URL",
          "name": "url",
          "type": "string",
          "placeholder": "https://airtable.com/app12DiScdfes/tblAAAAAAAAAAAAA/viwHdfasdfeieg5p",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "https://airtable.com/[a-zA-Z0-9]{2,}/([a-zA-Z0-9]{2,})/.*",
                "errorMessage": "Not a valid Airtable Table URL"
              }
            }
          ],
          "extractValue": {
            "type": "regex",
            "regex": "https://airtable.com/[a-zA-Z0-9]{2,}/([a-zA-Z0-9]{2,})"
          }
        },
        {
          "displayName": "ID",
          "name": "id",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "[a-zA-Z0-9]{2,}",
                "errorMessage": "Not a valid Airtable Table ID"
              }
            }
          ],
          "placeholder": "tbl3dirwqeidke"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ]
        }
      }
    },
    {
      "displayName": "Columns",
      "name": "columns",
      "type": "resourceMapper",
      "default": {
        "mappingMode": "defineBelow",
        "value": null
      },
      "noDataExpression": true,
      "required": true,
      "typeOptions": {
        "loadOptionsDependsOn": [
          "table.value",
          "base.value"
        ],
        "resourceMapper": {
          "resourceMapperMethod": "getColumns",
          "mode": "add",
          "fieldWords": {
            "singular": "column",
            "plural": "columns"
          },
          "addAllFields": true,
          "multiKeyMatch": true
        }
      },
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Typecast",
          "name": "typecast",
          "type": "boolean",
          "default": false,
          "description": "Whether the Airtable API should attempt mapping of string values for linked records & select options"
        },
        {
          "displayName": "Ignore Fields From Input",
          "name": "ignoreFields",
          "type": "string",
          "requiresDataPath": "multiple",
          "displayOptions": {
            "show": {
              "/columns.mappingMode": [
                "autoMapInputData"
              ]
            }
          },
          "default": "",
          "description": "Comma-separated list of fields in input to ignore when updating"
        },
        {
          "displayName": "Update All Matches",
          "name": "updateAllMatches",
          "type": "boolean",
          "default": false,
          "description": "Whether to update all records matching the value in the \"Column to Match On\". If not set, only the first matching record will be updated.",
          "displayOptions": {
            "show": {
              "/operation": [
                "update",
                "upsert"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Record ID",
      "name": "id",
      "type": "string",
      "default": "",
      "placeholder": "e.g. recf7EaZp707CEc8g",
      "required": true,
      "description": "ID of the record to delete. <a href=\"https://support.airtable.com/docs/record-id\" target=\"_blank\">More info</a>.",
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "deleteRecord"
          ]
        }
      }
    },
    {
      "displayName": "Record ID",
      "name": "id",
      "type": "string",
      "default": "",
      "placeholder": "e.g. recf7EaZp707CEc8g",
      "required": true,
      "description": "ID of the record to get. <a href=\"https://support.airtable.com/docs/record-id\" target=\"_blank\">More info</a>.",
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "description": "Additional options which decide which records should be returned",
      "placeholder": "Add option",
      "options": [
        {
          "displayName": "Download Attachments",
          "name": "downloadFields",
          "type": "multiOptions",
          "typeOptions": {
            "loadOptionsMethod": "getAttachmentColumns",
            "loadOptionsDependsOn": [
              "base.value",
              "table.value"
            ]
          },
          "default": [],
          "description": "The fields of type 'attachment' that should be downloaded"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Filter By Formula",
      "name": "filterByFormula",
      "type": "string",
      "default": "",
      "placeholder": "e.g. NOT({Name} = 'Admin')",
      "hint": "If empty, all the records will be returned",
      "description": "The formula will be evaluated for each record, and if the result is not 0, false, \"\", NaN, [], or #Error! the record will be included in the response. <a href=\"https://support.airtable.com/docs/formula-field-reference\" target=\"_blank\">More info</a>.",
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "search"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": true,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "search"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "record"
          ],
          "operation": [
            "search"
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 100
      },
      "default": 100,
      "description": "Max number of results to return"
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "description": "Additional options which decide which records should be returned",
      "placeholder": "Add option",
      "options": [
        {
          "displayName": "Download Attachments",
          "name": "downloadFields",
          "type": "multiOptions",
          "typeOptions": {
            "loadOptionsMethod": "getAttachmentColumns",
            "loadOptionsDependsOn": [
              "base.value",
              "table.value"
            ]
          },
          "default": [],
          "description": "The fields of type 'attachment' that should be downloaded"
        },
        {
          "displayName": "Output Fields",
          "name": "fields",
          "type": "multiOptions",
          "typeOptions": {
            "loadOptionsMethod": "getColumns",
            "loadOptionsDependsOn": [
              "base.value",
              "table.value"
            ]
          },
          "default": [],
          "description": "The fields you want to include in the output"
        },
        {
          "displayName": "View",
          "name": "view",
          "type": "resourceLocator",
          "default": {
            "mode": "list",
            "value": ""
          },
          "modes": [
            {
              "displayName": "From List",
              "name": "list",
              "type": "list",
              "typeOptions": {
                "searchListMethod": "viewSearch",
                "searchable": true
              }
            },
            {
              "displayName": "By URL",
              "name": "url",
              "type": "string",
              "placeholder": "https://airtable.com/app12DiScdfes/tblAAAAAAAAAAAAA/viwHdfasdfeieg5p",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "https://airtable.com/[a-zA-Z0-9]{2,}/[a-zA-Z0-9]{2,}/([a-zA-Z0-9]{2,})/.*",
                    "errorMessage": "Not a valid Airtable View URL"
                  }
                }
              ],
              "extractValue": {
                "type": "regex",
                "regex": "https://airtable.com/[a-zA-Z0-9]{2,}/[a-zA-Z0-9]{2,}/([a-zA-Z0-9]{2,})"
              }
            },
            {
              "displayName": "ID",
              "name": "id",
              "type": "string",
              "validation": [
                {
                  "type": "regex",
                  "properties": {
                    "regex": "[a-zA-Z0-9]{2,}",
                    "errorMessage": "Not a valid Airtable View ID"
                  }
                }
              ],
              "placeholder": "viw3dirwqeidke"
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "search"
          ]
        }
      }
    },
    {
      "displayName": "Sort",
      "name": "sort",
      "placeholder": "Add Sort Rule",
      "description": "Defines how the returned records should be ordered",
      "type": "fixedCollection",
      "typeOptions": {
        "multipleValues": true
      },
      "default": {},
      "options": [
        {
          "name": "property",
          "displayName": "Property",
          "values": [
            {
              "displayName": "Field",
              "name": "field",
              "type": "options",
              "typeOptions": {
                "loadOptionsMethod": "getColumns",
                "loadOptionsDependsOn": [
                  "base.value",
                  "table.value"
                ]
              },
              "default": "",
              "description": "Name of the field to sort on. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\">expression</a>."
            },
            {
              "displayName": "Direction",
              "name": "direction",
              "type": "options",
              "options": [
                {
                  "name": "ASC",
                  "value": "asc",
                  "description": "Sort in ascending order (small -> large)"
                },
                {
                  "name": "DESC",
                  "value": "desc",
                  "description": "Sort in descending order (large -> small)"
                }
              ],
              "default": "asc",
              "description": "The sort direction"
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "search"
          ]
        }
      }
    },
    {
      "displayName": "Columns",
      "name": "columns",
      "type": "resourceMapper",
      "noDataExpression": true,
      "default": {
        "mappingMode": "defineBelow",
        "value": null
      },
      "required": true,
      "typeOptions": {
        "loadOptionsDependsOn": [
          "table.value",
          "base.value"
        ],
        "resourceMapper": {
          "resourceMapperMethod": "getColumnsWithRecordId",
          "mode": "update",
          "fieldWords": {
            "singular": "column",
            "plural": "columns"
          },
          "addAllFields": true,
          "multiKeyMatch": true
        }
      },
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Typecast",
          "name": "typecast",
          "type": "boolean",
          "default": false,
          "description": "Whether the Airtable API should attempt mapping of string values for linked records & select options"
        },
        {
          "displayName": "Ignore Fields From Input",
          "name": "ignoreFields",
          "type": "string",
          "requiresDataPath": "multiple",
          "displayOptions": {
            "show": {
              "/columns.mappingMode": [
                "autoMapInputData"
              ]
            }
          },
          "default": "",
          "description": "Comma-separated list of fields in input to ignore when updating"
        },
        {
          "displayName": "Update All Matches",
          "name": "updateAllMatches",
          "type": "boolean",
          "default": false,
          "description": "Whether to update all records matching the value in the \"Column to Match On\". If not set, only the first matching record will be updated.",
          "displayOptions": {
            "show": {
              "/operation": [
                "update",
                "upsert"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Columns",
      "name": "columns",
      "type": "resourceMapper",
      "noDataExpression": true,
      "default": {
        "mappingMode": "defineBelow",
        "value": null
      },
      "required": true,
      "typeOptions": {
        "loadOptionsDependsOn": [
          "table.value",
          "base.value"
        ],
        "resourceMapper": {
          "resourceMapperMethod": "getColumnsWithRecordId",
          "mode": "update",
          "fieldWords": {
            "singular": "column",
            "plural": "columns"
          },
          "addAllFields": true,
          "multiKeyMatch": true
        }
      },
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "upsert"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Typecast",
          "name": "typecast",
          "type": "boolean",
          "default": false,
          "description": "Whether the Airtable API should attempt mapping of string values for linked records & select options"
        },
        {
          "displayName": "Ignore Fields From Input",
          "name": "ignoreFields",
          "type": "string",
          "requiresDataPath": "multiple",
          "displayOptions": {
            "show": {
              "/columns.mappingMode": [
                "autoMapInputData"
              ]
            }
          },
          "default": "",
          "description": "Comma-separated list of fields in input to ignore when updating"
        },
        {
          "displayName": "Update All Matches",
          "name": "updateAllMatches",
          "type": "boolean",
          "default": false,
          "description": "Whether to update all records matching the value in the \"Column to Match On\". If not set, only the first matching record will be updated.",
          "displayOptions": {
            "show": {
              "/operation": [
                "update",
                "upsert"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "record"
          ],
          "operation": [
            "upsert"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Get Many",
          "value": "getMany",
          "description": "List all the bases",
          "action": "Get many bases"
        },
        {
          "name": "Get Schema",
          "value": "getSchema",
          "description": "Get the schema of the tables in a base",
          "action": "Get base schema"
        }
      ],
      "default": "getMany",
      "displayOptions": {
        "show": {
          "resource": [
            "base"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": true,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "base"
          ],
          "operation": [
            "getMany"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "base"
          ],
          "operation": [
            "getMany"
          ]
        }
      },
      "typeOptions": {
        "minValue": 1,
        "maxValue": 100
      },
      "default": 100,
      "description": "Max number of results to return"
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Permission Level",
          "name": "permissionLevel",
          "type": "multiOptions",
          "options": [
            {
              "name": "Comment",
              "value": "comment"
            },
            {
              "name": "Create",
              "value": "create"
            },
            {
              "name": "Edit",
              "value": "edit"
            },
            {
              "name": "None",
              "value": "none"
            },
            {
              "name": "Read",
              "value": "read"
            }
          ],
          "default": [],
          "description": "Filter the returned bases by one or more permission levels"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "base"
          ],
          "operation": [
            "getMany"
          ]
        }
      }
    },
    {
      "displayName": "Base",
      "name": "base",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "required": true,
      "modes": [
        {
          "displayName": "From List",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "baseSearch",
            "searchable": true
          }
        },
        {
          "displayName": "By URL",
          "name": "url",
          "type": "string",
          "placeholder": "e.g. https://airtable.com/app12DiScdfes/tbl9WvGeEPa6lZyVq/viwHdfasdfeieg5p",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "https://airtable.com/([a-zA-Z0-9]{2,})/.*",
                "errorMessage": "Not a valid Airtable Base URL"
              }
            }
          ],
          "extractValue": {
            "type": "regex",
            "regex": "https://airtable.com/([a-zA-Z0-9]{2,})"
          }
        },
        {
          "displayName": "ID",
          "name": "id",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "[a-zA-Z0-9]{2,}",
                "errorMessage": "Not a valid Airtable Base ID"
              }
            }
          ],
          "placeholder": "e.g. appD3dfaeidke",
          "url": "=https://airtable.com/{{$value}}"
        }
      ],
      "description": "The Airtable Base to retrieve the schema from",
      "displayOptions": {
        "show": {
          "resource": [
            "base"
          ],
          "operation": [
            "getSchema"
          ]
        }
      }
    }
  ],
  "usableAsTool": true,
  "iconUrl": "icons/n8n-nodes-base/dist/nodes/Airtable/airtable.svg",
  "codex": {
    "categories": [
      "Data & Storage"
    ],
    "resources": {
      "primaryDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.airtable/"
        }
      ],
      "credentialDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/credentials/airtable/"
        }
      ]
    }
  },
  "name": "n8n-nodes-base.airtable"
}