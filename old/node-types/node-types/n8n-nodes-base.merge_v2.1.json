{
  "displayName": "Merge",
  "group": [
    "transform"
  ],
  "subtitle": "={{$parameter[\"mode\"]}}",
  "description": "Merges data of multiple streams once data from both is available",
  "defaultVersion": 3.2,
  "version": [
    2,
    2.1
  ],
  "defaults": {
    "name": "Merge"
  },
  "inputs": [
    "main",
    "main"
  ],
  "outputs": [
    "main"
  ],
  "inputNames": [
    "Input 1",
    "Input 2"
  ],
  "requiredInputs": "={{ $parameter[\"mode\"] === \"chooseBranch\" ? [0, 1] : 1 }}",
  "properties": [
    {
      "displayName": "Mode",
      "name": "mode",
      "type": "options",
      "options": [
        {
          "name": "Append",
          "value": "append",
          "description": "All items of input 1, then all items of input 2"
        },
        {
          "name": "Combine",
          "value": "combine",
          "description": "Merge matching items together"
        },
        {
          "name": "Choose Branch",
          "value": "chooseBranch",
          "description": "Output input data, without modifying it"
        }
      ],
      "default": "append",
      "description": "How data of branches should be merged"
    },
    {
      "displayName": "Combination Mode",
      "name": "combinationMode",
      "type": "options",
      "options": [
        {
          "name": "Merge By Fields",
          "value": "mergeByFields",
          "description": "Combine items with the same field values"
        },
        {
          "name": "Merge By Position",
          "value": "mergeByPosition",
          "description": "Combine items based on their order"
        },
        {
          "name": "Multiplex",
          "value": "multiplex",
          "description": "All possible item combinations (cross join)"
        }
      ],
      "default": "mergeByFields",
      "displayOptions": {
        "show": {
          "mode": [
            "combine"
          ]
        }
      }
    },
    {
      "displayName": "Fields to Match",
      "name": "mergeByFields",
      "type": "fixedCollection",
      "placeholder": "Add Fields to Match",
      "default": {
        "values": [
          {
            "field1": "",
            "field2": ""
          }
        ]
      },
      "typeOptions": {
        "multipleValues": true
      },
      "options": [
        {
          "displayName": "Values",
          "name": "values",
          "values": [
            {
              "displayName": "Input 1 Field",
              "name": "field1",
              "type": "string",
              "default": "",
              "placeholder": "e.g. id",
              "hint": " Enter the field name as text",
              "requiresDataPath": "single"
            },
            {
              "displayName": "Input 2 Field",
              "name": "field2",
              "type": "string",
              "default": "",
              "placeholder": "e.g. id",
              "hint": " Enter the field name as text",
              "requiresDataPath": "single"
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "mode": [
            "combine"
          ],
          "combinationMode": [
            "mergeByFields"
          ]
        }
      }
    },
    {
      "displayName": "Output Type",
      "name": "joinMode",
      "type": "options",
      "options": [
        {
          "name": "Keep Matches",
          "value": "keepMatches",
          "description": "Items that match, merged together (inner join)"
        },
        {
          "name": "Keep Non-Matches",
          "value": "keepNonMatches",
          "description": "Items that don't match"
        },
        {
          "name": "Keep Everything",
          "value": "keepEverything",
          "description": "Items that match merged together, plus items that don't match (outer join)"
        },
        {
          "name": "Enrich Input 1",
          "value": "enrichInput1",
          "description": "All of input 1, with data from input 2 added in (left join)"
        },
        {
          "name": "Enrich Input 2",
          "value": "enrichInput2",
          "description": "All of input 2, with data from input 1 added in (right join)"
        }
      ],
      "default": "keepMatches",
      "displayOptions": {
        "show": {
          "mode": [
            "combine"
          ],
          "combinationMode": [
            "mergeByFields"
          ]
        }
      }
    },
    {
      "displayName": "Output Data From",
      "name": "outputDataFrom",
      "type": "options",
      "options": [
        {
          "name": "Both Inputs Merged Together",
          "value": "both"
        },
        {
          "name": "Input 1",
          "value": "input1"
        },
        {
          "name": "Input 2",
          "value": "input2"
        }
      ],
      "default": "both",
      "displayOptions": {
        "show": {
          "mode": [
            "combine"
          ],
          "combinationMode": [
            "mergeByFields"
          ],
          "joinMode": [
            "keepMatches"
          ]
        }
      }
    },
    {
      "displayName": "Output Data From",
      "name": "outputDataFrom",
      "type": "options",
      "options": [
        {
          "name": "Both Inputs Appended Together",
          "value": "both"
        },
        {
          "name": "Input 1",
          "value": "input1"
        },
        {
          "name": "Input 2",
          "value": "input2"
        }
      ],
      "default": "both",
      "displayOptions": {
        "show": {
          "mode": [
            "combine"
          ],
          "combinationMode": [
            "mergeByFields"
          ],
          "joinMode": [
            "keepNonMatches"
          ]
        }
      }
    },
    {
      "displayName": "Output Type",
      "name": "chooseBranchMode",
      "type": "options",
      "options": [
        {
          "name": "Wait for Both Inputs to Arrive",
          "value": "waitForBoth"
        }
      ],
      "default": "waitForBoth",
      "displayOptions": {
        "show": {
          "mode": [
            "chooseBranch"
          ]
        }
      }
    },
    {
      "displayName": "Output",
      "name": "output",
      "type": "options",
      "options": [
        {
          "name": "Input 1 Data",
          "value": "input1"
        },
        {
          "name": "Input 2 Data",
          "value": "input2"
        },
        {
          "name": "A Single, Empty Item",
          "value": "empty"
        }
      ],
      "default": "input1",
      "displayOptions": {
        "show": {
          "mode": [
            "chooseBranch"
          ],
          "chooseBranchMode": [
            "waitForBoth"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Clash Handling",
          "name": "clashHandling",
          "type": "fixedCollection",
          "default": {
            "values": {
              "resolveClash": "preferInput2",
              "mergeMode": "deepMerge",
              "overrideEmpty": false
            }
          },
          "options": [
            {
              "displayName": "Values",
              "name": "values",
              "values": [
                {
                  "displayName": "When Field Values Clash",
                  "name": "resolveClash",
                  "type": "options",
                  "default": "",
                  "options": [
                    {
                      "name": "Always Add Input Number to Field Names",
                      "value": "addSuffix"
                    },
                    {
                      "name": "Prefer Input 1 Version",
                      "value": "preferInput1"
                    },
                    {
                      "name": "Prefer Input 2 Version",
                      "value": "preferInput2"
                    }
                  ]
                },
                {
                  "displayName": "Merging Nested Fields",
                  "name": "mergeMode",
                  "type": "options",
                  "default": "deepMerge",
                  "options": [
                    {
                      "name": "Deep Merge",
                      "value": "deepMerge",
                      "description": "Merge at every level of nesting"
                    },
                    {
                      "name": "Shallow Merge",
                      "value": "shallowMerge",
                      "description": "Merge at the top level only (all nested fields will come from the same input)"
                    }
                  ],
                  "hint": "How to merge when there are sub-fields below the top-level ones",
                  "displayOptions": {
                    "show": {
                      "resolveClash": [
                        "preferInput1",
                        "preferInput2"
                      ]
                    }
                  }
                },
                {
                  "displayName": "Minimize Empty Fields",
                  "name": "overrideEmpty",
                  "type": "boolean",
                  "default": false,
                  "description": "Whether to override the preferred input version for a field if it is empty and the other version isn't. Here 'empty' means undefined, null or an empty string.",
                  "displayOptions": {
                    "show": {
                      "resolveClash": [
                        "preferInput1",
                        "preferInput2"
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "displayOptions": {
            "show": {
              "/mode": [
                "combine"
              ],
              "/combinationMode": [
                "mergeByFields"
              ]
            },
            "hide": {
              "/joinMode": [
                "keepMatches",
                "keepNonMatches"
              ]
            }
          }
        },
        {
          "displayName": "Clash Handling",
          "name": "clashHandling",
          "type": "fixedCollection",
          "default": {
            "values": {
              "resolveClash": "preferInput2",
              "mergeMode": "deepMerge",
              "overrideEmpty": false
            }
          },
          "options": [
            {
              "displayName": "Values",
              "name": "values",
              "values": [
                {
                  "displayName": "When Field Values Clash",
                  "name": "resolveClash",
                  "type": "options",
                  "default": "",
                  "options": [
                    {
                      "name": "Always Add Input Number to Field Names",
                      "value": "addSuffix"
                    },
                    {
                      "name": "Prefer Input 1 Version",
                      "value": "preferInput1"
                    },
                    {
                      "name": "Prefer Input 2 Version",
                      "value": "preferInput2"
                    }
                  ]
                },
                {
                  "displayName": "Merging Nested Fields",
                  "name": "mergeMode",
                  "type": "options",
                  "default": "deepMerge",
                  "options": [
                    {
                      "name": "Deep Merge",
                      "value": "deepMerge",
                      "description": "Merge at every level of nesting"
                    },
                    {
                      "name": "Shallow Merge",
                      "value": "shallowMerge",
                      "description": "Merge at the top level only (all nested fields will come from the same input)"
                    }
                  ],
                  "hint": "How to merge when there are sub-fields below the top-level ones",
                  "displayOptions": {
                    "show": {
                      "resolveClash": [
                        "preferInput1",
                        "preferInput2"
                      ]
                    }
                  }
                },
                {
                  "displayName": "Minimize Empty Fields",
                  "name": "overrideEmpty",
                  "type": "boolean",
                  "default": false,
                  "description": "Whether to override the preferred input version for a field if it is empty and the other version isn't. Here 'empty' means undefined, null or an empty string.",
                  "displayOptions": {
                    "show": {
                      "resolveClash": [
                        "preferInput1",
                        "preferInput2"
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "displayOptions": {
            "show": {
              "/mode": [
                "combine"
              ],
              "/combinationMode": [
                "mergeByFields"
              ],
              "/joinMode": [
                "keepMatches"
              ],
              "/outputDataFrom": [
                "both"
              ]
            }
          }
        },
        {
          "displayName": "Clash Handling",
          "name": "clashHandling",
          "type": "fixedCollection",
          "default": {
            "values": {
              "resolveClash": "preferInput2",
              "mergeMode": "deepMerge",
              "overrideEmpty": false
            }
          },
          "options": [
            {
              "displayName": "Values",
              "name": "values",
              "values": [
                {
                  "displayName": "When Field Values Clash",
                  "name": "resolveClash",
                  "type": "options",
                  "default": "",
                  "options": [
                    {
                      "name": "Always Add Input Number to Field Names",
                      "value": "addSuffix"
                    },
                    {
                      "name": "Prefer Input 1 Version",
                      "value": "preferInput1"
                    },
                    {
                      "name": "Prefer Input 2 Version",
                      "value": "preferInput2"
                    }
                  ]
                },
                {
                  "displayName": "Merging Nested Fields",
                  "name": "mergeMode",
                  "type": "options",
                  "default": "deepMerge",
                  "options": [
                    {
                      "name": "Deep Merge",
                      "value": "deepMerge",
                      "description": "Merge at every level of nesting"
                    },
                    {
                      "name": "Shallow Merge",
                      "value": "shallowMerge",
                      "description": "Merge at the top level only (all nested fields will come from the same input)"
                    }
                  ],
                  "hint": "How to merge when there are sub-fields below the top-level ones",
                  "displayOptions": {
                    "show": {
                      "resolveClash": [
                        "preferInput1",
                        "preferInput2"
                      ]
                    }
                  }
                },
                {
                  "displayName": "Minimize Empty Fields",
                  "name": "overrideEmpty",
                  "type": "boolean",
                  "default": false,
                  "description": "Whether to override the preferred input version for a field if it is empty and the other version isn't. Here 'empty' means undefined, null or an empty string.",
                  "displayOptions": {
                    "show": {
                      "resolveClash": [
                        "preferInput1",
                        "preferInput2"
                      ]
                    }
                  }
                }
              ]
            }
          ],
          "displayOptions": {
            "show": {
              "/mode": [
                "combine"
              ],
              "/combinationMode": [
                "multiplex",
                "mergeByPosition"
              ]
            }
          }
        },
        {
          "displayName": "Disable Dot Notation",
          "name": "disableDotNotation",
          "type": "boolean",
          "default": false,
          "description": "Whether to disallow referencing child fields using `parent.child` in the field name",
          "displayOptions": {
            "show": {
              "/mode": [
                "combine"
              ],
              "/combinationMode": [
                "mergeByFields"
              ]
            }
          }
        },
        {
          "displayName": "Fuzzy Compare",
          "name": "fuzzyCompare",
          "type": "boolean",
          "default": false,
          "description": "Whether to tolerate small type differences when comparing fields. E.g. the number 3 and the string '3' are treated as the same."
        },
        {
          "displayName": "Include Any Unpaired Items",
          "name": "includeUnpaired",
          "type": "boolean",
          "default": false,
          "description": "If there are different numbers of items in input 1 and input 2, whether to include the ones at the end with nothing to pair with",
          "displayOptions": {
            "show": {
              "/mode": [
                "combine"
              ],
              "/combinationMode": [
                "mergeByPosition"
              ]
            }
          }
        },
        {
          "displayName": "Multiple Matches",
          "name": "multipleMatches",
          "type": "options",
          "default": "all",
          "options": [
            {
              "name": "Include All Matches",
              "value": "all",
              "description": "Output multiple items if there are multiple matches"
            },
            {
              "name": "Include First Match Only",
              "value": "first",
              "description": "Only ever output a single item per match"
            }
          ],
          "displayOptions": {
            "show": {
              "/mode": [
                "combine"
              ],
              "/combinationMode": [
                "mergeByFields"
              ],
              "/joinMode": [
                "keepMatches"
              ],
              "/outputDataFrom": [
                "both"
              ]
            }
          }
        },
        {
          "displayName": "Multiple Matches",
          "name": "multipleMatches",
          "type": "options",
          "default": "all",
          "options": [
            {
              "name": "Include All Matches",
              "value": "all",
              "description": "Output multiple items if there are multiple matches"
            },
            {
              "name": "Include First Match Only",
              "value": "first",
              "description": "Only ever output a single item per match"
            }
          ],
          "displayOptions": {
            "show": {
              "/mode": [
                "combine"
              ],
              "/combinationMode": [
                "mergeByFields"
              ],
              "/joinMode": [
                "enrichInput1",
                "enrichInput2",
                "keepEverything"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "hide": {
          "mode": [
            "chooseBranch",
            "append"
          ]
        }
      }
    }
  ],
  "iconUrl": "icons/n8n-nodes-base/dist/nodes/Merge/merge.svg",
  "codex": {
    "categories": [
      "Core Nodes"
    ],
    "subcategories": {
      "Core Nodes": [
        "Flow",
        "Data Transformation"
      ]
    },
    "alias": [
      "Join",
      "Concatenate",
      "Wait"
    ],
    "resources": {
      "primaryDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.merge/"
        }
      ]
    }
  },
  "name": "n8n-nodes-base.merge"
}