{
  "displayName": "Postgres Tool",
  "group": [
    "input"
  ],
  "defaultVersion": 2.6,
  "description": "Get, add and update data in Postgres",
  "parameterPane": "wide",
  "version": [
    2,
    2.1,
    2.2,
    2.3,
    2.4,
    2.5,
    2.6
  ],
  "subtitle": "={{ $parameter[\"operation\"] }}",
  "defaults": {
    "name": "Postgres"
  },
  "inputs": [],
  "outputs": [
    "ai_tool"
  ],
  "credentials": [
    {
      "name": "postgres",
      "required": true,
      "testedBy": "postgresConnectionTest"
    }
  ],
  "properties": [
    {
      "displayName": "Tool Description",
      "name": "descriptionType",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Set Automatically",
          "value": "auto",
          "description": "Automatically set based on resource and operation"
        },
        {
          "name": "Set Manually",
          "value": "manual",
          "description": "Manually set the description"
        }
      ],
      "default": "auto"
    },
    {
      "displayName": "Description",
      "name": "toolDescription",
      "type": "string",
      "default": "Get, add and update data in Postgres",
      "required": true,
      "typeOptions": {
        "rows": 2
      },
      "description": "Explain to the LLM what this tool does, a good, specific description would allow LLMs to produce expected results much more often",
      "displayOptions": {
        "show": {
          "descriptionType": [
            "manual"
          ]
        }
      }
    },
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "hidden",
      "noDataExpression": true,
      "options": [
        {
          "name": "Database",
          "value": "database"
        }
      ],
      "default": "database"
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Delete",
          "value": "deleteTable",
          "description": "Delete an entire table or rows in a table",
          "action": "Delete table or rows"
        },
        {
          "name": "Execute Query",
          "value": "executeQuery",
          "description": "Execute an SQL query",
          "action": "Execute a SQL query"
        },
        {
          "name": "Insert",
          "value": "insert",
          "description": "Insert rows in a table",
          "action": "Insert rows in a table"
        },
        {
          "name": "Insert or Update",
          "value": "upsert",
          "description": "Insert or update rows in a table",
          "action": "Insert or update rows in a table"
        },
        {
          "name": "Select",
          "value": "select",
          "description": "Select rows from a table",
          "action": "Select rows from a table"
        },
        {
          "name": "Update",
          "value": "update",
          "description": "Update rows in a table",
          "action": "Update rows in a table"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ]
        }
      },
      "default": "insert"
    },
    {
      "displayName": "Schema",
      "name": "schema",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": "public"
      },
      "required": true,
      "placeholder": "e.g. public",
      "description": "The schema that contains the table you want to work on",
      "modes": [
        {
          "displayName": "From List",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "schemaSearch"
          }
        },
        {
          "displayName": "By Name",
          "name": "name",
          "type": "string"
        }
      ],
      "displayOptions": {
        "hide": {
          "operation": [
            "executeQuery"
          ]
        }
      }
    },
    {
      "displayName": "Table",
      "name": "table",
      "type": "resourceLocator",
      "default": {
        "mode": "list",
        "value": ""
      },
      "required": true,
      "description": "The table you want to work on",
      "modes": [
        {
          "displayName": "From List",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "tableSearch"
          }
        },
        {
          "displayName": "By Name",
          "name": "name",
          "type": "string"
        }
      ],
      "displayOptions": {
        "hide": {
          "operation": [
            "executeQuery"
          ]
        }
      }
    },
    {
      "displayName": "Command",
      "name": "deleteCommand",
      "type": "options",
      "default": "truncate",
      "options": [
        {
          "name": "Truncate",
          "value": "truncate",
          "description": "Only removes the table's data and preserves the table's structure"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete the rows that match the 'Select Rows' conditions below. If no selection is made, all rows in the table are deleted."
        },
        {
          "name": "Drop",
          "value": "drop",
          "description": "Deletes the table's data and also the table's structure permanently"
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "deleteTable"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Restart Sequences",
      "name": "restartSequences",
      "type": "boolean",
      "default": false,
      "description": "Whether to reset identity (auto-increment) columns to their initial values",
      "displayOptions": {
        "show": {
          "deleteCommand": [
            "truncate"
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "deleteTable"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Select Rows",
      "name": "where",
      "type": "fixedCollection",
      "typeOptions": {
        "multipleValues": true
      },
      "placeholder": "Add Condition",
      "default": {},
      "description": "If not set, all rows will be selected",
      "options": [
        {
          "displayName": "Values",
          "name": "values",
          "values": [
            {
              "displayName": "Column",
              "name": "column",
              "type": "options",
              "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
              "default": "",
              "placeholder": "e.g. ID",
              "typeOptions": {
                "loadOptionsMethod": "getColumns",
                "loadOptionsDependsOn": [
                  "schema.value",
                  "table.value"
                ]
              }
            },
            {
              "displayName": "Operator",
              "name": "condition",
              "type": "options",
              "description": "The operator to check the column against. When using 'LIKE' operator percent sign ( %) matches zero or more characters, underscore ( _ ) matches any single character.",
              "options": [
                {
                  "name": "Equal",
                  "value": "equal"
                },
                {
                  "name": "Not Equal",
                  "value": "!="
                },
                {
                  "name": "Like",
                  "value": "LIKE"
                },
                {
                  "name": "Greater Than",
                  "value": ">"
                },
                {
                  "name": "Less Than",
                  "value": "<"
                },
                {
                  "name": "Greater Than Or Equal",
                  "value": ">="
                },
                {
                  "name": "Less Than Or Equal",
                  "value": "<="
                },
                {
                  "name": "Is Null",
                  "value": "IS NULL"
                },
                {
                  "name": "Is Not Null",
                  "value": "IS NOT NULL"
                }
              ],
              "default": "equal"
            },
            {
              "displayName": "Value",
              "name": "value",
              "type": "string",
              "displayOptions": {
                "hide": {
                  "condition": [
                    "IS NULL",
                    "IS NOT NULL"
                  ]
                }
              },
              "default": ""
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "deleteCommand": [
            "delete"
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "deleteTable"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Combine Conditions",
      "name": "combineConditions",
      "type": "options",
      "description": "How to combine the conditions defined in \"Select Rows\": AND requires all conditions to be true, OR requires at least one condition to be true",
      "options": [
        {
          "name": "AND",
          "value": "AND",
          "description": "Only rows that meet all the conditions are selected"
        },
        {
          "name": "OR",
          "value": "OR",
          "description": "Rows that meet at least one condition are selected"
        }
      ],
      "default": "AND",
      "displayOptions": {
        "show": {
          "deleteCommand": [
            "delete"
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "deleteTable"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Cascade",
          "name": "cascade",
          "type": "boolean",
          "default": false,
          "description": "Whether to drop all objects that depend on the table, such as views and sequences",
          "displayOptions": {
            "show": {
              "/operation": [
                "deleteTable"
              ]
            },
            "hide": {
              "/deleteCommand": [
                "delete"
              ]
            }
          }
        },
        {
          "displayName": "Connection Timeout",
          "name": "connectionTimeout",
          "type": "number",
          "default": 30,
          "description": "Number of seconds reserved for connecting to the database"
        },
        {
          "displayName": "Delay Closing Idle Connection",
          "name": "delayClosingIdleConnection",
          "type": "number",
          "default": 0,
          "description": "Number of seconds to wait before idle connection would be eligible for closing",
          "typeOptions": {
            "minValue": 0
          }
        },
        {
          "displayName": "Query Batching",
          "name": "queryBatching",
          "type": "options",
          "noDataExpression": true,
          "options": [
            {
              "name": "Single Query",
              "value": "single",
              "description": "A single query for all incoming items"
            },
            {
              "name": "Independent",
              "value": "independently",
              "description": "Execute one query per incoming item of the run"
            },
            {
              "name": "Transaction",
              "value": "transaction",
              "description": "Execute all queries in a transaction, if a failure occurs, all changes are rolled back"
            }
          ],
          "default": "single",
          "description": "The way queries should be sent to the database"
        },
        {
          "displayName": "Query Parameters",
          "name": "queryReplacement",
          "type": "string",
          "default": "",
          "description": "Comma-separated list of the values you want to use as query parameters. <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.postgres/#use-query-parameters\" target=\"_blank\">More info</a>.",
          "hint": "Comma-separated list of values: reference them in your query as $1, $2, $3…",
          "placeholder": "e.g. value1,value2,value3",
          "displayOptions": {
            "show": {
              "/operation": [
                "executeQuery"
              ]
            }
          }
        },
        {
          "displayName": "Treat query parameters in single quotes as text",
          "name": "treatQueryParametersInSingleQuotesAsText",
          "type": "boolean",
          "default": false,
          "description": "Whether to treat query parameters enclosed in single quotes as text e.g. '$1'",
          "displayOptions": {
            "show": {
              "queryReplacement": [
                {
                  "_cnd": {
                    "exists": true
                  }
                }
              ]
            }
          }
        },
        {
          "displayName": "Output Columns",
          "name": "outputColumns",
          "type": "multiOptions",
          "description": "Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
          "typeOptions": {
            "loadOptionsMethod": "getColumnsMultiOptions",
            "loadOptionsDependsOn": [
              "table.value"
            ]
          },
          "default": [],
          "displayOptions": {
            "show": {
              "/operation": [
                "select",
                "insert",
                "update",
                "upsert"
              ]
            }
          }
        },
        {
          "displayName": "Output Large-Format Numbers As",
          "name": "largeNumbersOutput",
          "type": "options",
          "options": [
            {
              "name": "Numbers",
              "value": "numbers"
            },
            {
              "name": "Text",
              "value": "text",
              "description": "Use this if you expect numbers longer than 16 digits (otherwise numbers may be incorrect)"
            }
          ],
          "hint": "Applies to NUMERIC and BIGINT columns only",
          "default": "text"
        },
        {
          "displayName": "Skip on Conflict",
          "name": "skipOnConflict",
          "type": "boolean",
          "default": false,
          "description": "Whether to skip the row and do not throw error if a unique constraint or exclusion constraint is violated",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert"
              ]
            }
          }
        },
        {
          "displayName": "Replace Empty Strings with NULL",
          "name": "replaceEmptyStrings",
          "type": "boolean",
          "default": false,
          "description": "Whether to replace empty strings with NULL in input, could be useful when data come from spreadsheet",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert",
                "update",
                "upsert",
                "executeQuery"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "deleteTable"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Query",
      "name": "query",
      "type": "string",
      "default": "",
      "placeholder": "e.g. SELECT id, name FROM product WHERE quantity > $1 AND price <= $2",
      "noDataExpression": true,
      "required": true,
      "description": "The SQL query to execute. You can use n8n expressions and $1, $2, $3, etc to refer to the 'Query Parameters' set in options below.",
      "typeOptions": {
        "editor": "sqlEditor",
        "sqlDialect": "PostgreSQL"
      },
      "hint": "Consider using query parameters to prevent SQL injection attacks. Add them in the options below",
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "executeQuery"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Cascade",
          "name": "cascade",
          "type": "boolean",
          "default": false,
          "description": "Whether to drop all objects that depend on the table, such as views and sequences",
          "displayOptions": {
            "show": {
              "/operation": [
                "deleteTable"
              ]
            },
            "hide": {
              "/deleteCommand": [
                "delete"
              ]
            }
          }
        },
        {
          "displayName": "Connection Timeout",
          "name": "connectionTimeout",
          "type": "number",
          "default": 30,
          "description": "Number of seconds reserved for connecting to the database"
        },
        {
          "displayName": "Delay Closing Idle Connection",
          "name": "delayClosingIdleConnection",
          "type": "number",
          "default": 0,
          "description": "Number of seconds to wait before idle connection would be eligible for closing",
          "typeOptions": {
            "minValue": 0
          }
        },
        {
          "displayName": "Query Batching",
          "name": "queryBatching",
          "type": "options",
          "noDataExpression": true,
          "options": [
            {
              "name": "Single Query",
              "value": "single",
              "description": "A single query for all incoming items"
            },
            {
              "name": "Independent",
              "value": "independently",
              "description": "Execute one query per incoming item of the run"
            },
            {
              "name": "Transaction",
              "value": "transaction",
              "description": "Execute all queries in a transaction, if a failure occurs, all changes are rolled back"
            }
          ],
          "default": "single",
          "description": "The way queries should be sent to the database"
        },
        {
          "displayName": "Query Parameters",
          "name": "queryReplacement",
          "type": "string",
          "default": "",
          "description": "Comma-separated list of the values you want to use as query parameters. <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.postgres/#use-query-parameters\" target=\"_blank\">More info</a>.",
          "hint": "Comma-separated list of values: reference them in your query as $1, $2, $3…",
          "placeholder": "e.g. value1,value2,value3",
          "displayOptions": {
            "show": {
              "/operation": [
                "executeQuery"
              ]
            }
          }
        },
        {
          "displayName": "Treat query parameters in single quotes as text",
          "name": "treatQueryParametersInSingleQuotesAsText",
          "type": "boolean",
          "default": false,
          "description": "Whether to treat query parameters enclosed in single quotes as text e.g. '$1'",
          "displayOptions": {
            "show": {
              "queryReplacement": [
                {
                  "_cnd": {
                    "exists": true
                  }
                }
              ]
            }
          }
        },
        {
          "displayName": "Output Columns",
          "name": "outputColumns",
          "type": "multiOptions",
          "description": "Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
          "typeOptions": {
            "loadOptionsMethod": "getColumnsMultiOptions",
            "loadOptionsDependsOn": [
              "table.value"
            ]
          },
          "default": [],
          "displayOptions": {
            "show": {
              "/operation": [
                "select",
                "insert",
                "update",
                "upsert"
              ]
            }
          }
        },
        {
          "displayName": "Output Large-Format Numbers As",
          "name": "largeNumbersOutput",
          "type": "options",
          "options": [
            {
              "name": "Numbers",
              "value": "numbers"
            },
            {
              "name": "Text",
              "value": "text",
              "description": "Use this if you expect numbers longer than 16 digits (otherwise numbers may be incorrect)"
            }
          ],
          "hint": "Applies to NUMERIC and BIGINT columns only",
          "default": "text"
        },
        {
          "displayName": "Skip on Conflict",
          "name": "skipOnConflict",
          "type": "boolean",
          "default": false,
          "description": "Whether to skip the row and do not throw error if a unique constraint or exclusion constraint is violated",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert"
              ]
            }
          }
        },
        {
          "displayName": "Replace Empty Strings with NULL",
          "name": "replaceEmptyStrings",
          "type": "boolean",
          "default": false,
          "description": "Whether to replace empty strings with NULL in input, could be useful when data come from spreadsheet",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert",
                "update",
                "upsert",
                "executeQuery"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "executeQuery"
          ]
        }
      }
    },
    {
      "displayName": "Data Mode",
      "name": "dataMode",
      "type": "options",
      "options": [
        {
          "name": "Auto-Map Input Data to Columns",
          "value": "autoMapInputData",
          "description": "Use when node input properties names exactly match the table column names"
        },
        {
          "name": "Map Each Column Manually",
          "value": "defineBelow",
          "description": "Set the value for each destination column manually"
        }
      ],
      "default": "autoMapInputData",
      "description": "Whether to map node input properties and the table data automatically or manually",
      "displayOptions": {
        "show": {
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "insert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "\n\t\tIn this mode, make sure incoming data fields are named the same as the columns in your table. If needed, use an 'Edit Fields' node before this node to change the field names.\n\t\t",
      "name": "notice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "dataMode": [
            "autoMapInputData"
          ],
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "insert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Values to Send",
      "name": "valuesToSend",
      "placeholder": "Add Value",
      "type": "fixedCollection",
      "typeOptions": {
        "multipleValueButtonText": "Add Value",
        "multipleValues": true
      },
      "displayOptions": {
        "show": {
          "dataMode": [
            "defineBelow"
          ],
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "insert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      },
      "default": {},
      "options": [
        {
          "displayName": "Values",
          "name": "values",
          "values": [
            {
              "displayName": "Column",
              "name": "column",
              "type": "options",
              "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
              "typeOptions": {
                "loadOptionsMethod": "getColumns",
                "loadOptionsDependsOn": [
                  "schema.value",
                  "table.value"
                ]
              },
              "default": []
            },
            {
              "displayName": "Value",
              "name": "value",
              "type": "string",
              "default": ""
            }
          ]
        }
      ]
    },
    {
      "displayName": "Columns",
      "name": "columns",
      "type": "resourceMapper",
      "default": {
        "mappingMode": "defineBelow",
        "value": null
      },
      "noDataExpression": true,
      "required": true,
      "typeOptions": {
        "loadOptionsDependsOn": [
          "table.value",
          "operation"
        ],
        "resourceMapper": {
          "resourceMapperMethod": "getMappingColumns",
          "mode": "add",
          "fieldWords": {
            "singular": "column",
            "plural": "columns"
          },
          "addAllFields": true,
          "multiKeyMatch": true
        }
      },
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "gte": 2.2
              }
            }
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "insert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Cascade",
          "name": "cascade",
          "type": "boolean",
          "default": false,
          "description": "Whether to drop all objects that depend on the table, such as views and sequences",
          "displayOptions": {
            "show": {
              "/operation": [
                "deleteTable"
              ]
            },
            "hide": {
              "/deleteCommand": [
                "delete"
              ]
            }
          }
        },
        {
          "displayName": "Connection Timeout",
          "name": "connectionTimeout",
          "type": "number",
          "default": 30,
          "description": "Number of seconds reserved for connecting to the database"
        },
        {
          "displayName": "Delay Closing Idle Connection",
          "name": "delayClosingIdleConnection",
          "type": "number",
          "default": 0,
          "description": "Number of seconds to wait before idle connection would be eligible for closing",
          "typeOptions": {
            "minValue": 0
          }
        },
        {
          "displayName": "Query Batching",
          "name": "queryBatching",
          "type": "options",
          "noDataExpression": true,
          "options": [
            {
              "name": "Single Query",
              "value": "single",
              "description": "A single query for all incoming items"
            },
            {
              "name": "Independent",
              "value": "independently",
              "description": "Execute one query per incoming item of the run"
            },
            {
              "name": "Transaction",
              "value": "transaction",
              "description": "Execute all queries in a transaction, if a failure occurs, all changes are rolled back"
            }
          ],
          "default": "single",
          "description": "The way queries should be sent to the database"
        },
        {
          "displayName": "Query Parameters",
          "name": "queryReplacement",
          "type": "string",
          "default": "",
          "description": "Comma-separated list of the values you want to use as query parameters. <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.postgres/#use-query-parameters\" target=\"_blank\">More info</a>.",
          "hint": "Comma-separated list of values: reference them in your query as $1, $2, $3…",
          "placeholder": "e.g. value1,value2,value3",
          "displayOptions": {
            "show": {
              "/operation": [
                "executeQuery"
              ]
            }
          }
        },
        {
          "displayName": "Treat query parameters in single quotes as text",
          "name": "treatQueryParametersInSingleQuotesAsText",
          "type": "boolean",
          "default": false,
          "description": "Whether to treat query parameters enclosed in single quotes as text e.g. '$1'",
          "displayOptions": {
            "show": {
              "queryReplacement": [
                {
                  "_cnd": {
                    "exists": true
                  }
                }
              ]
            }
          }
        },
        {
          "displayName": "Output Columns",
          "name": "outputColumns",
          "type": "multiOptions",
          "description": "Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
          "typeOptions": {
            "loadOptionsMethod": "getColumnsMultiOptions",
            "loadOptionsDependsOn": [
              "table.value"
            ]
          },
          "default": [],
          "displayOptions": {
            "show": {
              "/operation": [
                "select",
                "insert",
                "update",
                "upsert"
              ]
            }
          }
        },
        {
          "displayName": "Output Large-Format Numbers As",
          "name": "largeNumbersOutput",
          "type": "options",
          "options": [
            {
              "name": "Numbers",
              "value": "numbers"
            },
            {
              "name": "Text",
              "value": "text",
              "description": "Use this if you expect numbers longer than 16 digits (otherwise numbers may be incorrect)"
            }
          ],
          "hint": "Applies to NUMERIC and BIGINT columns only",
          "default": "text"
        },
        {
          "displayName": "Skip on Conflict",
          "name": "skipOnConflict",
          "type": "boolean",
          "default": false,
          "description": "Whether to skip the row and do not throw error if a unique constraint or exclusion constraint is violated",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert"
              ]
            }
          }
        },
        {
          "displayName": "Replace Empty Strings with NULL",
          "name": "replaceEmptyStrings",
          "type": "boolean",
          "default": false,
          "description": "Whether to replace empty strings with NULL in input, could be useful when data come from spreadsheet",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert",
                "update",
                "upsert",
                "executeQuery"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "insert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "type": "boolean",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "select"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "type": "number",
      "default": 50,
      "description": "Max number of results to return",
      "typeOptions": {
        "minValue": 1
      },
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "select"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Select Rows",
      "name": "where",
      "type": "fixedCollection",
      "typeOptions": {
        "multipleValues": true
      },
      "placeholder": "Add Condition",
      "default": {},
      "description": "If not set, all rows will be selected",
      "options": [
        {
          "displayName": "Values",
          "name": "values",
          "values": [
            {
              "displayName": "Column",
              "name": "column",
              "type": "options",
              "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
              "default": "",
              "placeholder": "e.g. ID",
              "typeOptions": {
                "loadOptionsMethod": "getColumns",
                "loadOptionsDependsOn": [
                  "schema.value",
                  "table.value"
                ]
              }
            },
            {
              "displayName": "Operator",
              "name": "condition",
              "type": "options",
              "description": "The operator to check the column against. When using 'LIKE' operator percent sign ( %) matches zero or more characters, underscore ( _ ) matches any single character.",
              "options": [
                {
                  "name": "Equal",
                  "value": "equal"
                },
                {
                  "name": "Not Equal",
                  "value": "!="
                },
                {
                  "name": "Like",
                  "value": "LIKE"
                },
                {
                  "name": "Greater Than",
                  "value": ">"
                },
                {
                  "name": "Less Than",
                  "value": "<"
                },
                {
                  "name": "Greater Than Or Equal",
                  "value": ">="
                },
                {
                  "name": "Less Than Or Equal",
                  "value": "<="
                },
                {
                  "name": "Is Null",
                  "value": "IS NULL"
                },
                {
                  "name": "Is Not Null",
                  "value": "IS NOT NULL"
                }
              ],
              "default": "equal"
            },
            {
              "displayName": "Value",
              "name": "value",
              "type": "string",
              "displayOptions": {
                "hide": {
                  "condition": [
                    "IS NULL",
                    "IS NOT NULL"
                  ]
                }
              },
              "default": ""
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "select"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Combine Conditions",
      "name": "combineConditions",
      "type": "options",
      "description": "How to combine the conditions defined in \"Select Rows\": AND requires all conditions to be true, OR requires at least one condition to be true",
      "options": [
        {
          "name": "AND",
          "value": "AND",
          "description": "Only rows that meet all the conditions are selected"
        },
        {
          "name": "OR",
          "value": "OR",
          "description": "Rows that meet at least one condition are selected"
        }
      ],
      "default": "AND",
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "select"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Sort",
      "name": "sort",
      "type": "fixedCollection",
      "typeOptions": {
        "multipleValues": true
      },
      "placeholder": "Add Sort Rule",
      "default": {},
      "options": [
        {
          "displayName": "Values",
          "name": "values",
          "values": [
            {
              "displayName": "Column",
              "name": "column",
              "type": "options",
              "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
              "default": "",
              "typeOptions": {
                "loadOptionsMethod": "getColumns",
                "loadOptionsDependsOn": [
                  "schema.value",
                  "table.value"
                ]
              }
            },
            {
              "displayName": "Direction",
              "name": "direction",
              "type": "options",
              "options": [
                {
                  "name": "ASC",
                  "value": "ASC"
                },
                {
                  "name": "DESC",
                  "value": "DESC"
                }
              ],
              "default": "ASC"
            }
          ]
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "select"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Cascade",
          "name": "cascade",
          "type": "boolean",
          "default": false,
          "description": "Whether to drop all objects that depend on the table, such as views and sequences",
          "displayOptions": {
            "show": {
              "/operation": [
                "deleteTable"
              ]
            },
            "hide": {
              "/deleteCommand": [
                "delete"
              ]
            }
          }
        },
        {
          "displayName": "Connection Timeout",
          "name": "connectionTimeout",
          "type": "number",
          "default": 30,
          "description": "Number of seconds reserved for connecting to the database"
        },
        {
          "displayName": "Delay Closing Idle Connection",
          "name": "delayClosingIdleConnection",
          "type": "number",
          "default": 0,
          "description": "Number of seconds to wait before idle connection would be eligible for closing",
          "typeOptions": {
            "minValue": 0
          }
        },
        {
          "displayName": "Query Batching",
          "name": "queryBatching",
          "type": "options",
          "noDataExpression": true,
          "options": [
            {
              "name": "Single Query",
              "value": "single",
              "description": "A single query for all incoming items"
            },
            {
              "name": "Independent",
              "value": "independently",
              "description": "Execute one query per incoming item of the run"
            },
            {
              "name": "Transaction",
              "value": "transaction",
              "description": "Execute all queries in a transaction, if a failure occurs, all changes are rolled back"
            }
          ],
          "default": "single",
          "description": "The way queries should be sent to the database"
        },
        {
          "displayName": "Query Parameters",
          "name": "queryReplacement",
          "type": "string",
          "default": "",
          "description": "Comma-separated list of the values you want to use as query parameters. <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.postgres/#use-query-parameters\" target=\"_blank\">More info</a>.",
          "hint": "Comma-separated list of values: reference them in your query as $1, $2, $3…",
          "placeholder": "e.g. value1,value2,value3",
          "displayOptions": {
            "show": {
              "/operation": [
                "executeQuery"
              ]
            }
          }
        },
        {
          "displayName": "Treat query parameters in single quotes as text",
          "name": "treatQueryParametersInSingleQuotesAsText",
          "type": "boolean",
          "default": false,
          "description": "Whether to treat query parameters enclosed in single quotes as text e.g. '$1'",
          "displayOptions": {
            "show": {
              "queryReplacement": [
                {
                  "_cnd": {
                    "exists": true
                  }
                }
              ]
            }
          }
        },
        {
          "displayName": "Output Columns",
          "name": "outputColumns",
          "type": "multiOptions",
          "description": "Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
          "typeOptions": {
            "loadOptionsMethod": "getColumnsMultiOptions",
            "loadOptionsDependsOn": [
              "table.value"
            ]
          },
          "default": [],
          "displayOptions": {
            "show": {
              "/operation": [
                "select",
                "insert",
                "update",
                "upsert"
              ]
            }
          }
        },
        {
          "displayName": "Output Large-Format Numbers As",
          "name": "largeNumbersOutput",
          "type": "options",
          "options": [
            {
              "name": "Numbers",
              "value": "numbers"
            },
            {
              "name": "Text",
              "value": "text",
              "description": "Use this if you expect numbers longer than 16 digits (otherwise numbers may be incorrect)"
            }
          ],
          "hint": "Applies to NUMERIC and BIGINT columns only",
          "default": "text"
        },
        {
          "displayName": "Skip on Conflict",
          "name": "skipOnConflict",
          "type": "boolean",
          "default": false,
          "description": "Whether to skip the row and do not throw error if a unique constraint or exclusion constraint is violated",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert"
              ]
            }
          }
        },
        {
          "displayName": "Replace Empty Strings with NULL",
          "name": "replaceEmptyStrings",
          "type": "boolean",
          "default": false,
          "description": "Whether to replace empty strings with NULL in input, could be useful when data come from spreadsheet",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert",
                "update",
                "upsert",
                "executeQuery"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "select"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Data Mode",
      "name": "dataMode",
      "type": "options",
      "options": [
        {
          "name": "Auto-Map Input Data to Columns",
          "value": "autoMapInputData",
          "description": "Use when node input properties names exactly match the table column names"
        },
        {
          "name": "Map Each Column Manually",
          "value": "defineBelow",
          "description": "Set the value for each destination column manually"
        }
      ],
      "default": "autoMapInputData",
      "description": "Whether to map node input properties and the table data automatically or manually",
      "displayOptions": {
        "show": {
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "update"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "\n\t\tIn this mode, make sure incoming data fields are named the same as the columns in your table. If needed, use an 'Edit Fields' node before this node to change the field names.\n\t\t",
      "name": "notice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "dataMode": [
            "autoMapInputData"
          ],
          "@version": [
            2
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "update"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Column to Match On",
      "name": "columnToMatchOn",
      "type": "options",
      "required": true,
      "description": "The column to compare when finding the rows to update. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>.",
      "typeOptions": {
        "loadOptionsMethod": "getColumns",
        "loadOptionsDependsOn": [
          "schema.value",
          "table.value"
        ]
      },
      "default": "",
      "hint": "The column to use when matching rows in Postgres to the input items of this node. Usually an ID.",
      "displayOptions": {
        "show": {
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "update"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Value of Column to Match On",
      "name": "valueToMatchOn",
      "type": "string",
      "default": "",
      "description": "Rows with a value in the specified \"Column to Match On\" that corresponds to the value in this field will be updated",
      "displayOptions": {
        "show": {
          "dataMode": [
            "defineBelow"
          ],
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "update"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Values to Send",
      "name": "valuesToSend",
      "placeholder": "Add Value",
      "type": "fixedCollection",
      "typeOptions": {
        "multipleValueButtonText": "Add Value",
        "multipleValues": true
      },
      "displayOptions": {
        "show": {
          "dataMode": [
            "defineBelow"
          ],
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "update"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      },
      "default": {},
      "options": [
        {
          "displayName": "Values",
          "name": "values",
          "values": [
            {
              "displayName": "Column",
              "name": "column",
              "type": "options",
              "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
              "typeOptions": {
                "loadOptionsMethod": "getColumnsWithoutColumnToMatchOn",
                "loadOptionsDependsOn": [
                  "schema.value",
                  "table.value"
                ]
              },
              "default": []
            },
            {
              "displayName": "Value",
              "name": "value",
              "type": "string",
              "default": ""
            }
          ]
        }
      ]
    },
    {
      "displayName": "Columns",
      "name": "columns",
      "type": "resourceMapper",
      "noDataExpression": true,
      "default": {
        "mappingMode": "defineBelow",
        "value": null
      },
      "required": true,
      "typeOptions": {
        "loadOptionsDependsOn": [
          "table.value",
          "operation"
        ],
        "resourceMapper": {
          "resourceMapperMethod": "getMappingColumns",
          "mode": "update",
          "fieldWords": {
            "singular": "column",
            "plural": "columns"
          },
          "addAllFields": true,
          "multiKeyMatch": true
        }
      },
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "gte": 2.2
              }
            }
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "update"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Cascade",
          "name": "cascade",
          "type": "boolean",
          "default": false,
          "description": "Whether to drop all objects that depend on the table, such as views and sequences",
          "displayOptions": {
            "show": {
              "/operation": [
                "deleteTable"
              ]
            },
            "hide": {
              "/deleteCommand": [
                "delete"
              ]
            }
          }
        },
        {
          "displayName": "Connection Timeout",
          "name": "connectionTimeout",
          "type": "number",
          "default": 30,
          "description": "Number of seconds reserved for connecting to the database"
        },
        {
          "displayName": "Delay Closing Idle Connection",
          "name": "delayClosingIdleConnection",
          "type": "number",
          "default": 0,
          "description": "Number of seconds to wait before idle connection would be eligible for closing",
          "typeOptions": {
            "minValue": 0
          }
        },
        {
          "displayName": "Query Batching",
          "name": "queryBatching",
          "type": "options",
          "noDataExpression": true,
          "options": [
            {
              "name": "Single Query",
              "value": "single",
              "description": "A single query for all incoming items"
            },
            {
              "name": "Independent",
              "value": "independently",
              "description": "Execute one query per incoming item of the run"
            },
            {
              "name": "Transaction",
              "value": "transaction",
              "description": "Execute all queries in a transaction, if a failure occurs, all changes are rolled back"
            }
          ],
          "default": "single",
          "description": "The way queries should be sent to the database"
        },
        {
          "displayName": "Query Parameters",
          "name": "queryReplacement",
          "type": "string",
          "default": "",
          "description": "Comma-separated list of the values you want to use as query parameters. <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.postgres/#use-query-parameters\" target=\"_blank\">More info</a>.",
          "hint": "Comma-separated list of values: reference them in your query as $1, $2, $3…",
          "placeholder": "e.g. value1,value2,value3",
          "displayOptions": {
            "show": {
              "/operation": [
                "executeQuery"
              ]
            }
          }
        },
        {
          "displayName": "Treat query parameters in single quotes as text",
          "name": "treatQueryParametersInSingleQuotesAsText",
          "type": "boolean",
          "default": false,
          "description": "Whether to treat query parameters enclosed in single quotes as text e.g. '$1'",
          "displayOptions": {
            "show": {
              "queryReplacement": [
                {
                  "_cnd": {
                    "exists": true
                  }
                }
              ]
            }
          }
        },
        {
          "displayName": "Output Columns",
          "name": "outputColumns",
          "type": "multiOptions",
          "description": "Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
          "typeOptions": {
            "loadOptionsMethod": "getColumnsMultiOptions",
            "loadOptionsDependsOn": [
              "table.value"
            ]
          },
          "default": [],
          "displayOptions": {
            "show": {
              "/operation": [
                "select",
                "insert",
                "update",
                "upsert"
              ]
            }
          }
        },
        {
          "displayName": "Output Large-Format Numbers As",
          "name": "largeNumbersOutput",
          "type": "options",
          "options": [
            {
              "name": "Numbers",
              "value": "numbers"
            },
            {
              "name": "Text",
              "value": "text",
              "description": "Use this if you expect numbers longer than 16 digits (otherwise numbers may be incorrect)"
            }
          ],
          "hint": "Applies to NUMERIC and BIGINT columns only",
          "default": "text"
        },
        {
          "displayName": "Skip on Conflict",
          "name": "skipOnConflict",
          "type": "boolean",
          "default": false,
          "description": "Whether to skip the row and do not throw error if a unique constraint or exclusion constraint is violated",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert"
              ]
            }
          }
        },
        {
          "displayName": "Replace Empty Strings with NULL",
          "name": "replaceEmptyStrings",
          "type": "boolean",
          "default": false,
          "description": "Whether to replace empty strings with NULL in input, could be useful when data come from spreadsheet",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert",
                "update",
                "upsert",
                "executeQuery"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "update"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Data Mode",
      "name": "dataMode",
      "type": "options",
      "options": [
        {
          "name": "Auto-Map Input Data to Columns",
          "value": "autoMapInputData",
          "description": "Use when node input properties names exactly match the table column names"
        },
        {
          "name": "Map Each Column Manually",
          "value": "defineBelow",
          "description": "Set the value for each destination column manually"
        }
      ],
      "default": "autoMapInputData",
      "description": "Whether to map node input properties and the table data automatically or manually",
      "displayOptions": {
        "show": {
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "upsert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "\n\t\tIn this mode, make sure incoming data fields are named the same as the columns in your table. If needed, use an 'Edit Fields' node before this node to change the field names.\n\t\t",
      "name": "notice",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "dataMode": [
            "autoMapInputData"
          ],
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "upsert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Unique Column",
      "name": "columnToMatchOn",
      "type": "options",
      "required": true,
      "description": "The column to compare when finding the rows to update. Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>.",
      "typeOptions": {
        "loadOptionsMethod": "getColumns",
        "loadOptionsDependsOn": [
          "schema.value",
          "table.value"
        ]
      },
      "default": "",
      "hint": "Used to find the correct row(s) to update. Doesn't get changed. Has to be unique.",
      "displayOptions": {
        "show": {
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "upsert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Value of Unique Column",
      "name": "valueToMatchOn",
      "type": "string",
      "default": "",
      "description": "Rows with a value in the specified \"Column to Match On\" that corresponds to the value in this field will be updated. New rows will be created for non-matching items.",
      "displayOptions": {
        "show": {
          "dataMode": [
            "defineBelow"
          ],
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "upsert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Values to Send",
      "name": "valuesToSend",
      "placeholder": "Add Value",
      "type": "fixedCollection",
      "typeOptions": {
        "multipleValueButtonText": "Add Value",
        "multipleValues": true
      },
      "displayOptions": {
        "show": {
          "dataMode": [
            "defineBelow"
          ],
          "@version": [
            2,
            2.1
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "upsert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      },
      "default": {},
      "options": [
        {
          "displayName": "Values",
          "name": "values",
          "values": [
            {
              "displayName": "Column",
              "name": "column",
              "type": "options",
              "description": "Choose from the list, or specify an ID using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
              "typeOptions": {
                "loadOptionsMethod": "getColumnsWithoutColumnToMatchOn",
                "loadOptionsDependsOn": [
                  "schema.value",
                  "table.value"
                ]
              },
              "default": []
            },
            {
              "displayName": "Value",
              "name": "value",
              "type": "string",
              "default": ""
            }
          ]
        }
      ]
    },
    {
      "displayName": "Columns",
      "name": "columns",
      "type": "resourceMapper",
      "noDataExpression": true,
      "default": {
        "mappingMode": "defineBelow",
        "value": null
      },
      "required": true,
      "typeOptions": {
        "loadOptionsDependsOn": [
          "table.value",
          "operation"
        ],
        "resourceMapper": {
          "resourceMapperMethod": "getMappingColumns",
          "mode": "upsert",
          "fieldWords": {
            "singular": "column",
            "plural": "columns"
          },
          "addAllFields": true,
          "multiKeyMatch": true
        }
      },
      "displayOptions": {
        "show": {
          "@version": [
            {
              "_cnd": {
                "gte": 2.2
              }
            }
          ],
          "resource": [
            "database"
          ],
          "operation": [
            "upsert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Cascade",
          "name": "cascade",
          "type": "boolean",
          "default": false,
          "description": "Whether to drop all objects that depend on the table, such as views and sequences",
          "displayOptions": {
            "show": {
              "/operation": [
                "deleteTable"
              ]
            },
            "hide": {
              "/deleteCommand": [
                "delete"
              ]
            }
          }
        },
        {
          "displayName": "Connection Timeout",
          "name": "connectionTimeout",
          "type": "number",
          "default": 30,
          "description": "Number of seconds reserved for connecting to the database"
        },
        {
          "displayName": "Delay Closing Idle Connection",
          "name": "delayClosingIdleConnection",
          "type": "number",
          "default": 0,
          "description": "Number of seconds to wait before idle connection would be eligible for closing",
          "typeOptions": {
            "minValue": 0
          }
        },
        {
          "displayName": "Query Batching",
          "name": "queryBatching",
          "type": "options",
          "noDataExpression": true,
          "options": [
            {
              "name": "Single Query",
              "value": "single",
              "description": "A single query for all incoming items"
            },
            {
              "name": "Independent",
              "value": "independently",
              "description": "Execute one query per incoming item of the run"
            },
            {
              "name": "Transaction",
              "value": "transaction",
              "description": "Execute all queries in a transaction, if a failure occurs, all changes are rolled back"
            }
          ],
          "default": "single",
          "description": "The way queries should be sent to the database"
        },
        {
          "displayName": "Query Parameters",
          "name": "queryReplacement",
          "type": "string",
          "default": "",
          "description": "Comma-separated list of the values you want to use as query parameters. <a href=\"https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.postgres/#use-query-parameters\" target=\"_blank\">More info</a>.",
          "hint": "Comma-separated list of values: reference them in your query as $1, $2, $3…",
          "placeholder": "e.g. value1,value2,value3",
          "displayOptions": {
            "show": {
              "/operation": [
                "executeQuery"
              ]
            }
          }
        },
        {
          "displayName": "Treat query parameters in single quotes as text",
          "name": "treatQueryParametersInSingleQuotesAsText",
          "type": "boolean",
          "default": false,
          "description": "Whether to treat query parameters enclosed in single quotes as text e.g. '$1'",
          "displayOptions": {
            "show": {
              "queryReplacement": [
                {
                  "_cnd": {
                    "exists": true
                  }
                }
              ]
            }
          }
        },
        {
          "displayName": "Output Columns",
          "name": "outputColumns",
          "type": "multiOptions",
          "description": "Choose from the list, or specify IDs using an <a href=\"https://docs.n8n.io/code/expressions/\" target=\"_blank\">expression</a>",
          "typeOptions": {
            "loadOptionsMethod": "getColumnsMultiOptions",
            "loadOptionsDependsOn": [
              "table.value"
            ]
          },
          "default": [],
          "displayOptions": {
            "show": {
              "/operation": [
                "select",
                "insert",
                "update",
                "upsert"
              ]
            }
          }
        },
        {
          "displayName": "Output Large-Format Numbers As",
          "name": "largeNumbersOutput",
          "type": "options",
          "options": [
            {
              "name": "Numbers",
              "value": "numbers"
            },
            {
              "name": "Text",
              "value": "text",
              "description": "Use this if you expect numbers longer than 16 digits (otherwise numbers may be incorrect)"
            }
          ],
          "hint": "Applies to NUMERIC and BIGINT columns only",
          "default": "text"
        },
        {
          "displayName": "Skip on Conflict",
          "name": "skipOnConflict",
          "type": "boolean",
          "default": false,
          "description": "Whether to skip the row and do not throw error if a unique constraint or exclusion constraint is violated",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert"
              ]
            }
          }
        },
        {
          "displayName": "Replace Empty Strings with NULL",
          "name": "replaceEmptyStrings",
          "type": "boolean",
          "default": false,
          "description": "Whether to replace empty strings with NULL in input, could be useful when data come from spreadsheet",
          "displayOptions": {
            "show": {
              "/operation": [
                "insert",
                "update",
                "upsert",
                "executeQuery"
              ]
            }
          }
        }
      ],
      "displayOptions": {
        "show": {
          "resource": [
            "database"
          ],
          "operation": [
            "upsert"
          ]
        },
        "hide": {
          "table": [
            ""
          ]
        }
      }
    }
  ],
  "iconUrl": "icons/n8n-nodes-base/dist/nodes/Postgres/postgres.svg",
  "codex": {
    "categories": [
      "AI"
    ],
    "subcategories": {
      "AI": [
        "Tools"
      ],
      "Tools": [
        "Other Tools"
      ]
    },
    "resources": {
      "primaryDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.postgres/"
        }
      ],
      "credentialDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/credentials/postgres/"
        }
      ]
    }
  },
  "name": "n8n-nodes-base.postgresTool"
}