{
  "displayName": "Kafka Trigger",
  "group": [
    "trigger"
  ],
  "version": [
    1,
    1.1
  ],
  "description": "Consume messages from a Kafka topic",
  "defaults": {
    "name": "Kafka Trigger"
  },
  "inputs": [],
  "outputs": [
    "main"
  ],
  "credentials": [
    {
      "name": "kafka",
      "required": true
    }
  ],
  "properties": [
    {
      "displayName": "Topic",
      "name": "topic",
      "type": "string",
      "default": "",
      "required": true,
      "placeholder": "topic-name",
      "description": "Name of the queue of topic to consume from"
    },
    {
      "displayName": "Group ID",
      "name": "groupId",
      "type": "string",
      "default": "",
      "required": true,
      "placeholder": "n8n-kafka",
      "description": "ID of the consumer group"
    },
    {
      "displayName": "Use Schema Registry",
      "name": "useSchemaRegistry",
      "type": "boolean",
      "default": false,
      "description": "Whether to use Confluent Schema Registry"
    },
    {
      "displayName": "Schema Registry URL",
      "name": "schemaRegistryUrl",
      "type": "string",
      "required": true,
      "displayOptions": {
        "show": {
          "useSchemaRegistry": [
            true
          ]
        }
      },
      "placeholder": "https://schema-registry-domain:8081",
      "default": "",
      "description": "URL of the schema registry"
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "default": {},
      "placeholder": "Add option",
      "options": [
        {
          "displayName": "Allow Topic Creation",
          "name": "allowAutoTopicCreation",
          "type": "boolean",
          "default": false,
          "description": "Whether to allow sending message to a previously non exisiting topic"
        },
        {
          "displayName": "Auto Commit Threshold",
          "name": "autoCommitThreshold",
          "type": "number",
          "default": 0,
          "description": "The consumer will commit offsets after resolving a given number of messages"
        },
        {
          "displayName": "Auto Commit Interval",
          "name": "autoCommitInterval",
          "type": "number",
          "default": 0,
          "description": "The consumer will commit offsets after a given period, for example, five seconds",
          "hint": "Value in milliseconds"
        },
        {
          "displayName": "Heartbeat Interval",
          "name": "heartbeatInterval",
          "type": "number",
          "default": 3000,
          "description": "Heartbeats are used to ensure that the consumer's session stays active",
          "hint": "The value must be set lower than Session Timeout"
        },
        {
          "displayName": "Max Number of Requests",
          "name": "maxInFlightRequests",
          "type": "number",
          "default": 1,
          "description": "The maximum number of unacknowledged requests the client will send on a single connection"
        },
        {
          "displayName": "Read Messages From Beginning",
          "name": "fromBeginning",
          "type": "boolean",
          "default": true,
          "description": "Whether to read message from beginning"
        },
        {
          "displayName": "JSON Parse Message",
          "name": "jsonParseMessage",
          "type": "boolean",
          "default": false,
          "description": "Whether to try to parse the message to an object"
        },
        {
          "displayName": "Parallel Processing",
          "name": "parallelProcessing",
          "type": "boolean",
          "default": true,
          "displayOptions": {
            "hide": {
              "@version": [
                1
              ]
            }
          },
          "description": "Whether to process messages in parallel or by keeping the message in order"
        },
        {
          "displayName": "Only Message",
          "name": "onlyMessage",
          "type": "boolean",
          "displayOptions": {
            "show": {
              "jsonParseMessage": [
                true
              ]
            }
          },
          "default": false,
          "description": "Whether to return only the message property"
        },
        {
          "displayName": "Return Headers",
          "name": "returnHeaders",
          "type": "boolean",
          "default": false,
          "description": "Whether to return the headers received from Kafka"
        },
        {
          "displayName": "Session Timeout",
          "name": "sessionTimeout",
          "type": "number",
          "default": 30000,
          "description": "The time to await a response in ms",
          "hint": "Value in milliseconds"
        }
      ]
    }
  ],
  "codex": {
    "categories": [
      "Development"
    ],
    "resources": {
      "primaryDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/trigger-nodes/n8n-nodes-base.kafkatrigger/"
        }
      ],
      "credentialDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/credentials/kafka/"
        }
      ]
    }
  },
  "iconUrl": {
    "light": "icons/n8n-nodes-base/dist/nodes/Kafka/kafka.svg",
    "dark": "icons/n8n-nodes-base/dist/nodes/Kafka/kafka.dark.svg"
  },
  "name": "n8n-nodes-base.kafkaTrigger"
}