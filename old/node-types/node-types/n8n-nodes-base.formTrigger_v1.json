{
  "displayName": "n8n Form Trigger",
  "group": [
    "trigger"
  ],
  "description": "Generate webforms in n8n and pass their responses to the workflow",
  "defaultVersion": 2.2,
  "version": 1,
  "defaults": {
    "name": "n8n Form Trigger"
  },
  "inputs": [],
  "outputs": [
    "main"
  ],
  "webhooks": [
    {
      "name": "setup",
      "httpMethod": "GET",
      "responseMode": "onReceived",
      "isFullPath": true,
      "path": "={{$parameter[\"path\"]}}/n8n-form",
      "ndvHideUrl": true
    },
    {
      "name": "default",
      "httpMethod": "POST",
      "responseMode": "={{$parameter[\"responseMode\"]}}",
      "responseData": "={{$parameter[\"responseMode\"] === \"lastNode\" ? \"noData\" : undefined}}",
      "isFullPath": true,
      "path": "={{$parameter[\"path\"]}}/n8n-form",
      "ndvHideMethod": true
    }
  ],
  "eventTriggerDescription": "Waiting for you to submit the form",
  "activationMessage": "You can now make calls to your production Form URL.",
  "triggerPanel": {
    "header": "Pull in a test form submission",
    "executionsHelp": {
      "inactive": "Form Trigger has two modes: test and production. <br /> <br /> <b>Use test mode while you build your workflow</b>. Click the 'Execute step' button, then fill out the test form that opens in a popup tab. The executions will show up in the editor.<br /> <br /> <b>Use production mode to run your workflow automatically</b>. <a data-key=\"activate\">Activate</a> the workflow, then make requests to the production URL. Then every time there's a form submission via the Production Form URL, the workflow will execute. These executions will show up in the executions list, but not in the editor.",
      "active": "Form Trigger has two modes: test and production. <br /> <br /> <b>Use test mode while you build your workflow</b>. Click the 'Execute step' button, then fill out the test form that opens in a popup tab. The executions will show up in the editor.<br /> <br /> <b>Use production mode to run your workflow automatically</b>. <a data-key=\"activate\">Activate</a> the workflow, then make requests to the production URL. Then every time there's a form submission via the Production Form URL, the workflow will execute. These executions will show up in the executions list, but not in the editor."
    },
    "activationHint": {
      "active": "This node will also trigger automatically on new form submissions (but those executions won't show up here).",
      "inactive": "<a data-key=\"activate\">Activate</a> this workflow to have it also run automatically for new form submissions created via the Production URL."
    }
  },
  "properties": [
    {
      "displayName": "Form Path",
      "name": "path",
      "type": "string",
      "default": "",
      "placeholder": "webhook",
      "required": true,
      "description": "The final segment of the form's URL, both for test and production"
    },
    {
      "displayName": "Form Title",
      "name": "formTitle",
      "type": "string",
      "default": "",
      "placeholder": "e.g. Contact us",
      "required": true,
      "description": "Shown at the top of the form"
    },
    {
      "displayName": "Form Description",
      "name": "formDescription",
      "type": "string",
      "default": "",
      "placeholder": "e.g. We'll get back to you soon",
      "description": "Shown underneath the Form Title. Can be used to prompt the user on how to complete the form. Accepts HTML.",
      "typeOptions": {
        "rows": 2
      }
    },
    {
      "displayName": "Form Elements",
      "name": "formFields",
      "placeholder": "Add Form Element",
      "type": "fixedCollection",
      "default": {},
      "typeOptions": {
        "multipleValues": true,
        "sortable": true
      },
      "options": [
        {
          "displayName": "Values",
          "name": "values",
          "values": [
            {
              "displayName": "Field Name",
              "name": "fieldLabel",
              "type": "string",
              "default": "",
              "placeholder": "e.g. What is your name?",
              "description": "Label that appears above the input field",
              "required": true,
              "displayOptions": {
                "hide": {
                  "fieldType": [
                    "hiddenField",
                    "html"
                  ]
                }
              }
            },
            {
              "displayName": "Element Type",
              "name": "fieldType",
              "type": "options",
              "default": "text",
              "description": "The type of field to add to the form",
              "options": [
                {
                  "name": "Custom HTML",
                  "value": "html"
                },
                {
                  "name": "Date",
                  "value": "date"
                },
                {
                  "name": "Dropdown List",
                  "value": "dropdown"
                },
                {
                  "name": "Email",
                  "value": "email"
                },
                {
                  "name": "File",
                  "value": "file"
                },
                {
                  "name": "Hidden Field",
                  "value": "hiddenField"
                },
                {
                  "name": "Number",
                  "value": "number"
                },
                {
                  "name": "Password",
                  "value": "password"
                },
                {
                  "name": "Text",
                  "value": "text"
                },
                {
                  "name": "Textarea",
                  "value": "textarea"
                }
              ],
              "required": true
            },
            {
              "displayName": "Element Name",
              "name": "elementName",
              "type": "string",
              "default": "",
              "placeholder": "e.g. content-section",
              "description": "Optional field. It can be used to include the html in the output.",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "html"
                  ]
                }
              }
            },
            {
              "displayName": "Placeholder",
              "name": "placeholder",
              "description": "Sample text to display inside the field",
              "type": "string",
              "default": "",
              "displayOptions": {
                "hide": {
                  "fieldType": [
                    "dropdown",
                    "date",
                    "file",
                    "html",
                    "hiddenField"
                  ]
                }
              }
            },
            {
              "displayName": "Field Name",
              "name": "fieldName",
              "description": "The name of the field, used in input attributes and referenced by the workflow",
              "type": "string",
              "default": "",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "hiddenField"
                  ]
                }
              }
            },
            {
              "displayName": "Field Value",
              "name": "fieldValue",
              "description": "Input value can be set here or will be passed as a query parameter via Field Name if no value is set",
              "type": "string",
              "default": "",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "hiddenField"
                  ]
                }
              }
            },
            {
              "displayName": "Field Options",
              "name": "fieldOptions",
              "placeholder": "Add Field Option",
              "description": "List of options that can be selected from the dropdown",
              "type": "fixedCollection",
              "default": {
                "values": [
                  {
                    "option": ""
                  }
                ]
              },
              "required": true,
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "dropdown"
                  ]
                }
              },
              "typeOptions": {
                "multipleValues": true,
                "sortable": true
              },
              "options": [
                {
                  "displayName": "Values",
                  "name": "values",
                  "values": [
                    {
                      "displayName": "Option",
                      "name": "option",
                      "type": "string",
                      "default": ""
                    }
                  ]
                }
              ]
            },
            {
              "displayName": "Multiple Choice",
              "name": "multiselect",
              "type": "boolean",
              "default": false,
              "description": "Whether to allow the user to select multiple options from the dropdown list",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "dropdown"
                  ]
                }
              }
            },
            {
              "displayName": "HTML",
              "name": "html",
              "typeOptions": {
                "editor": "htmlEditor"
              },
              "type": "string",
              "noDataExpression": true,
              "default": "<!-- Your custom HTML here --->\n\n\n",
              "description": "HTML elements to display on the form page",
              "hint": "Does not accept <code>&lt;script&gt;</code>, <code>&lt;style&gt;</code> or <code>&lt;input&gt;</code> tags",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "html"
                  ]
                }
              }
            },
            {
              "displayName": "Multiple Files",
              "name": "multipleFiles",
              "type": "boolean",
              "default": true,
              "description": "Whether to allow the user to select multiple files from the file input or just one",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "file"
                  ]
                }
              }
            },
            {
              "displayName": "Accepted File Types",
              "name": "acceptFileTypes",
              "type": "string",
              "default": "",
              "description": "Comma-separated list of allowed file extensions",
              "hint": "Leave empty to allow all file types",
              "placeholder": "e.g. .jpg, .png",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "file"
                  ]
                }
              }
            },
            {
              "displayName": "The displayed date is formatted based on the locale of the user's browser",
              "name": "formatDate",
              "type": "notice",
              "default": "",
              "displayOptions": {
                "show": {
                  "fieldType": [
                    "date"
                  ]
                }
              }
            },
            {
              "displayName": "Required Field",
              "name": "requiredField",
              "type": "boolean",
              "default": false,
              "description": "Whether to require the user to enter a value for this field before submitting the form",
              "displayOptions": {
                "hide": {
                  "fieldType": [
                    "html",
                    "hiddenField"
                  ]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "displayName": "Respond When",
      "name": "responseMode",
      "type": "options",
      "options": [
        {
          "name": "Form Is Submitted",
          "value": "onReceived",
          "description": "As soon as this node receives the form submission"
        },
        {
          "name": "Workflow Finishes",
          "value": "lastNode",
          "description": "When the last node of the workflow is executed"
        },
        {
          "name": "Using 'Respond to Webhook' Node",
          "value": "responseNode",
          "description": "When the 'Respond to Webhook' node is executed"
        }
      ],
      "default": "onReceived",
      "description": "When to respond to the form submission"
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "displayOptions": {
        "hide": {
          "responseMode": [
            "responseNode"
          ]
        }
      },
      "options": [
        {
          "displayName": "Form Submitted Text",
          "name": "formSubmittedText",
          "description": "The text displayed to users after they filled the form",
          "type": "string",
          "default": "Your response has been recorded"
        }
      ]
    }
  ],
  "iconUrl": "icons/n8n-nodes-base/dist/nodes/Form/form.svg",
  "codex": {
    "categories": [
      "Core Nodes"
    ],
    "subcategories": {
      "Core Nodes": [
        "Other Trigger Nodes"
      ]
    },
    "alias": [
      "table",
      "submit",
      "post"
    ],
    "resources": {
      "primaryDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.formtrigger/"
        }
      ]
    }
  },
  "name": "n8n-nodes-base.formTrigger"
}