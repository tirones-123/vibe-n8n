{
  "displayName": "Azure Cosmos DB",
  "group": [
    "transform"
  ],
  "version": 1,
  "subtitle": "={{ $parameter[\"operation\"] + \": \" + $parameter[\"resource\"] }}",
  "description": "Interact with Azure Cosmos DB API",
  "defaults": {
    "name": "Azure Cosmos DB"
  },
  "inputs": [
    "main"
  ],
  "outputs": [
    "main"
  ],
  "credentials": [
    {
      "name": "microsoftAzureCosmosDbSharedKeyApi",
      "required": true
    }
  ],
  "requestDefaults": {
    "baseURL": "=https://{{ $credentials.account }}.documents.azure.com/dbs/{{ $credentials.database }}",
    "json": true,
    "ignoreHttpStatusErrors": true
  },
  "properties": [
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Container",
          "value": "container"
        },
        {
          "name": "Item",
          "value": "item"
        },
        {
          "name": "Custom API Call",
          "value": "__CUSTOM_API_CALL__"
        }
      ],
      "default": "container"
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "noDataExpression": true,
      "displayOptions": {
        "show": {
          "resource": [
            "container"
          ]
        }
      },
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a container",
          "routing": {
            "request": {
              "method": "POST",
              "url": "/colls"
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          },
          "action": "Create container"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete a container",
          "routing": {
            "request": {
              "method": "DELETE",
              "url": "=/colls/{{ $parameter[\"container\"] }}"
            },
            "output": {
              "postReceive": [
                null,
                {
                  "type": "set",
                  "properties": {
                    "value": "={{ { \"deleted\": true } }}"
                  }
                }
              ]
            }
          },
          "action": "Delete container"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Retrieve a container",
          "routing": {
            "request": {
              "method": "GET",
              "url": "=/colls/{{ $parameter[\"container\"] }}"
            },
            "output": {
              "postReceive": [
                null,
                null
              ]
            }
          },
          "action": "Get container"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Retrieve a list of containers",
          "routing": {
            "request": {
              "method": "GET",
              "url": "/colls"
            },
            "output": {
              "postReceive": [
                null,
                {
                  "type": "rootProperty",
                  "properties": {
                    "property": "DocumentCollections"
                  }
                },
                null
              ]
            }
          },
          "action": "Get many containers"
        },
        {
          "name": "Custom API Call",
          "value": "__CUSTOM_API_CALL__"
        }
      ],
      "default": "getAll"
    },
    {
      "displayName": "ID",
      "name": "containerCreate",
      "default": "",
      "description": "Unique identifier for the new container",
      "placeholder": "e.g. Container1",
      "required": true,
      "routing": {
        "send": {
          "preSend": [
            null
          ]
        }
      },
      "type": "string",
      "displayOptions": {
        "show": {
          "resource": [
            "container"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Partition Key",
      "name": "partitionKey",
      "default": "{\n\t\"paths\": [\n\t\t\"/id\"\n\t],\n\t\"kind\": \"Hash\",\n\t\"version\": 2\n}",
      "description": "The partition key is used to automatically distribute data across partitions for scalability. Choose a property in your JSON document that has a wide range of values and evenly distributes request volume.",
      "required": true,
      "routing": {
        "send": {
          "preSend": [
            null
          ]
        }
      },
      "type": "json",
      "displayOptions": {
        "show": {
          "resource": [
            "container"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "default": {},
      "options": [
        {
          "displayName": "Indexing Policy",
          "name": "indexingPolicy",
          "default": "{\n\t\"indexingMode\": \"consistent\",\n\t\"automatic\": true,\n\t\"includedPaths\": [\n\t\t{\n\t\t\t\"path\": \"/*\"\n\t\t}\n\t],\n\t\"excludedPaths\": []\n}",
          "description": "This value is used to configure indexing policy",
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            }
          },
          "type": "json"
        },
        {
          "displayName": "Max RU/s (for Autoscale)",
          "name": "maxThroughput",
          "default": 1000,
          "description": "The user specified autoscale max RU/s",
          "displayOptions": {
            "hide": {
              "/additionalFields.offerThroughput": [
                {
                  "_cnd": {
                    "exists": true
                  }
                }
              ]
            }
          },
          "routing": {
            "request": {
              "headers": {
                "x-ms-cosmos-offer-autopilot-setting": "={{ $value }}"
              }
            }
          },
          "type": "number",
          "typeOptions": {
            "minValue": 1000
          }
        },
        {
          "displayName": "Manual Throughput RU/s",
          "name": "offerThroughput",
          "default": 400,
          "description": "The user specified manual throughput (RU/s) for the collection expressed in units of 100 request units per second",
          "displayOptions": {
            "hide": {
              "/additionalFields.maxThroughput": [
                {
                  "_cnd": {
                    "exists": true
                  }
                }
              ]
            }
          },
          "routing": {
            "request": {
              "headers": {
                "x-ms-offer-throughput": "={{ $value }}"
              }
            }
          },
          "type": "number",
          "typeOptions": {
            "minValue": 400
          }
        }
      ],
      "placeholder": "Add Option",
      "type": "collection",
      "displayOptions": {
        "show": {
          "resource": [
            "container"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Container",
      "name": "container",
      "default": {
        "mode": "list",
        "value": ""
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchContainers",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the container ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The container ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the container you want to delete",
      "displayOptions": {
        "show": {
          "resource": [
            "container"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Container",
      "name": "container",
      "default": {
        "mode": "list",
        "value": ""
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchContainers",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the container ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The container ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the container you want to retrieve",
      "displayOptions": {
        "show": {
          "resource": [
            "container"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Simplify",
      "name": "simple",
      "default": true,
      "description": "Whether to return a simplified version of the response instead of the raw data",
      "type": "boolean",
      "displayOptions": {
        "show": {
          "resource": [
            "container"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "routing": {
        "send": {
          "paginate": "={{ $value }}"
        },
        "operations": {
          "pagination": {
            "type": "generic",
            "properties": {
              "continue": "={{ !!$response.headers?.[\"x-ms-continuation\"] }}",
              "request": {
                "headers": {
                  "x-ms-continuation": "={{ $response.headers?.[\"x-ms-continuation\"] }}"
                }
              }
            }
          }
        }
      },
      "type": "boolean",
      "displayOptions": {
        "show": {
          "resource": [
            "container"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "default": 50,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "container"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "routing": {
        "request": {
          "headers": {
            "x-ms-max-item-count": "={{ $value || undefined }}"
          }
        }
      },
      "type": "number",
      "typeOptions": {
        "minValue": 1
      },
      "validateType": "number"
    },
    {
      "displayName": "Simplify",
      "name": "simple",
      "default": true,
      "description": "Whether to return a simplified version of the response instead of the raw data",
      "type": "boolean",
      "displayOptions": {
        "show": {
          "resource": [
            "container"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "noDataExpression": true,
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ]
        }
      },
      "options": [
        {
          "name": "Create",
          "value": "create",
          "description": "Create a new item",
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            },
            "request": {
              "method": "POST",
              "url": "=/colls/{{ $parameter[\"container\"] }}/docs",
              "headers": {
                "x-ms-documentdb-is-upsert": "True"
              }
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          },
          "action": "Create item"
        },
        {
          "name": "Delete",
          "value": "delete",
          "description": "Delete an existing item",
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            },
            "request": {
              "method": "DELETE",
              "url": "=/colls/{{ $parameter[\"container\"] }}/docs/{{ $parameter[\"item\"] }}"
            },
            "output": {
              "postReceive": [
                null,
                {
                  "type": "set",
                  "properties": {
                    "value": "={{ { \"deleted\": true } }}"
                  }
                }
              ]
            }
          },
          "action": "Delete item"
        },
        {
          "name": "Get",
          "value": "get",
          "description": "Retrieve an item",
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            },
            "request": {
              "method": "GET",
              "url": "=/colls/{{ $parameter[\"container\"]}}/docs/{{$parameter[\"item\"]}}",
              "headers": {
                "x-ms-documentdb-is-upsert": "True"
              }
            },
            "output": {
              "postReceive": [
                null,
                null
              ]
            }
          },
          "action": "Get item"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Retrieve a list of items",
          "routing": {
            "request": {
              "method": "GET",
              "url": "=/colls/{{ $parameter[\"container\"] }}/docs"
            },
            "output": {
              "postReceive": [
                null,
                {
                  "type": "rootProperty",
                  "properties": {
                    "property": "Documents"
                  }
                },
                null
              ]
            }
          },
          "action": "Get many items"
        },
        {
          "name": "Execute Query",
          "value": "query",
          "routing": {
            "request": {
              "method": "POST",
              "url": "=/colls/{{ $parameter[\"container\"] }}/docs",
              "headers": {
                "Content-Type": "application/query+json",
                "x-ms-documentdb-isquery": "True",
                "x-ms-documentdb-query-enablecrosspartition": "True"
              }
            },
            "output": {
              "postReceive": [
                null,
                {
                  "type": "rootProperty",
                  "properties": {
                    "property": "Documents"
                  }
                },
                null
              ]
            }
          },
          "action": "Query items"
        },
        {
          "name": "Update",
          "value": "update",
          "description": "Update an existing item",
          "routing": {
            "send": {
              "preSend": [
                null
              ]
            },
            "request": {
              "method": "PUT",
              "url": "=/colls/{{ $parameter[\"container\"] }}/docs/{{ $parameter[\"item\"] }}",
              "headers": {
                "Content-Type": "application/json-patch+json"
              }
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          },
          "action": "Update item"
        },
        {
          "name": "Custom API Call",
          "value": "__CUSTOM_API_CALL__"
        }
      ],
      "default": "getAll"
    },
    {
      "displayName": "Container",
      "name": "container",
      "default": {
        "mode": "list",
        "value": ""
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchContainers",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the container ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The container ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the container you want to use",
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "create"
          ]
        }
      }
    },
    {
      "displayName": "Item Contents",
      "name": "customProperties",
      "default": "{\n\t\"id\": \"replace_with_new_document_id\"\n}",
      "description": "The item contents as a JSON object",
      "displayOptions": {
        "hide": {
          "container": [
            ""
          ]
        },
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "create"
          ]
        }
      },
      "hint": "The item requires an ID and partition key value if a custom key is set",
      "required": true,
      "routing": {
        "send": {
          "preSend": [
            null
          ]
        }
      },
      "type": "json"
    },
    {
      "displayName": "Container",
      "name": "container",
      "default": {
        "mode": "list",
        "value": ""
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchContainers",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the container ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The container ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the container you want to use",
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "delete"
          ]
        }
      }
    },
    {
      "displayName": "Item",
      "name": "item",
      "default": {
        "mode": "list",
        "value": ""
      },
      "displayOptions": {
        "hide": {
          "container": [
            ""
          ]
        },
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "delete"
          ]
        }
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchItems",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the item ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The item ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the item to be deleted"
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "default": {},
      "displayOptions": {
        "hide": {
          "container": [
            ""
          ],
          "item": [
            ""
          ]
        },
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "delete"
          ]
        }
      },
      "options": [
        {
          "displayName": "Partition Key",
          "name": "partitionKey",
          "default": "",
          "hint": "Only required if a custom partition key is set for the container",
          "type": "string"
        }
      ],
      "placeholder": "Add Partition Key",
      "type": "collection"
    },
    {
      "displayName": "Container",
      "name": "container",
      "default": {
        "mode": "list",
        "value": ""
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchContainers",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the container ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The container ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the container you want to use",
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "get"
          ]
        }
      }
    },
    {
      "displayName": "Item",
      "name": "item",
      "default": {
        "mode": "list",
        "value": ""
      },
      "displayOptions": {
        "hide": {
          "container": [
            ""
          ]
        },
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "get"
          ]
        }
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchItems",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the item ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The item ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the item you want to retrieve"
    },
    {
      "displayName": "Simplify",
      "name": "simple",
      "default": true,
      "description": "Whether to return a simplified version of the response instead of the raw data",
      "displayOptions": {
        "hide": {
          "container": [
            ""
          ],
          "item": [
            ""
          ]
        },
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "get"
          ]
        }
      },
      "type": "boolean"
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "default": {},
      "displayOptions": {
        "hide": {
          "container": [
            ""
          ],
          "item": [
            ""
          ]
        },
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "get"
          ]
        }
      },
      "options": [
        {
          "displayName": "Partition Key",
          "name": "partitionKey",
          "default": "",
          "hint": "Only required if a custom partition key is set for the container",
          "type": "string"
        }
      ],
      "placeholder": "Add Partition Key",
      "type": "collection"
    },
    {
      "displayName": "Container",
      "name": "container",
      "default": {
        "mode": "list",
        "value": ""
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchContainers",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the container ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The container ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the container you want to use",
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Return All",
      "name": "returnAll",
      "default": false,
      "description": "Whether to return all results or only up to a given limit",
      "routing": {
        "send": {
          "paginate": "={{ $value }}"
        },
        "operations": {
          "pagination": {
            "type": "generic",
            "properties": {
              "continue": "={{ !!$response.headers?.[\"x-ms-continuation\"] }}",
              "request": {
                "headers": {
                  "x-ms-continuation": "={{ $response.headers?.[\"x-ms-continuation\"] }}"
                }
              }
            }
          }
        }
      },
      "type": "boolean",
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Limit",
      "name": "limit",
      "default": 50,
      "description": "Max number of results to return",
      "displayOptions": {
        "show": {
          "returnAll": [
            false
          ],
          "resource": [
            "item"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "routing": {
        "request": {
          "headers": {
            "x-ms-max-item-count": "={{ $value || undefined }}"
          }
        }
      },
      "type": "number",
      "typeOptions": {
        "minValue": 1
      },
      "validateType": "number"
    },
    {
      "displayName": "Simplify",
      "name": "simple",
      "default": true,
      "description": "Whether to return a simplified version of the response instead of the raw data",
      "type": "boolean",
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "getAll"
          ]
        }
      }
    },
    {
      "displayName": "Container",
      "name": "container",
      "default": {
        "mode": "list",
        "value": ""
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchContainers",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the container ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The container ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the container you want to use",
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "query"
          ]
        }
      }
    },
    {
      "displayName": "Query",
      "name": "query",
      "default": "",
      "description": "The SQL query to execute. Use $1, $2, $3, etc., to reference the 'Query Parameters' set in the options below.",
      "hint": "Consider using query parameters to prevent SQL injection attacks. Add them in the options below.",
      "noDataExpression": true,
      "placeholder": "e.g. SELECT id, name FROM c WHERE c.name = $1",
      "required": true,
      "routing": {
        "send": {
          "type": "body",
          "property": "query",
          "value": "={{ $value.replace(/\\$(\\d+)/g, '@Param$1') }}"
        }
      },
      "type": "string",
      "typeOptions": {
        "editor": "sqlEditor",
        "sqlDialect": "StandardSQL"
      },
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "query"
          ]
        }
      }
    },
    {
      "displayName": "Simplify",
      "name": "simple",
      "default": true,
      "description": "Whether to return a simplified version of the response instead of the raw data",
      "type": "boolean",
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "query"
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "default": {},
      "options": [
        {
          "displayName": "Query Options",
          "name": "queryOptions",
          "values": [
            {
              "displayName": "Query Parameters",
              "name": "queryParameters",
              "default": "",
              "description": "Comma-separated list of values used as query parameters. Use $1, $2, $3, etc., in your query.",
              "hint": "Reference them in your query as $1, $2, $3…",
              "placeholder": "e.g. value1,value2,value3",
              "routing": {
                "send": {
                  "preSend": [
                    null
                  ]
                }
              },
              "type": "string"
            }
          ]
        }
      ],
      "placeholder": "Add options",
      "type": "fixedCollection",
      "typeOptions": {
        "multipleValues": false
      },
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "query"
          ]
        }
      }
    },
    {
      "displayName": "Container",
      "name": "container",
      "default": {
        "mode": "list",
        "value": ""
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchContainers",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the container ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The container ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the container you want to use",
      "displayOptions": {
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "update"
          ]
        }
      }
    },
    {
      "displayName": "Item",
      "name": "item",
      "default": {
        "mode": "list",
        "value": ""
      },
      "displayOptions": {
        "hide": {
          "container": [
            ""
          ]
        },
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "update"
          ]
        }
      },
      "modes": [
        {
          "displayName": "From list",
          "name": "list",
          "type": "list",
          "typeOptions": {
            "searchListMethod": "searchItems",
            "searchable": true
          }
        },
        {
          "displayName": "By ID",
          "name": "id",
          "hint": "Enter the item ID",
          "placeholder": "e.g. AndersenFamily",
          "type": "string",
          "validation": [
            {
              "type": "regex",
              "properties": {
                "regex": "^[\\w+=,.@-]+$",
                "errorMessage": "The item ID must follow the allowed pattern"
              }
            }
          ]
        }
      ],
      "required": true,
      "type": "resourceLocator",
      "description": "Select the item to be updated"
    },
    {
      "displayName": "Item Contents",
      "name": "customProperties",
      "default": "{}",
      "description": "The item contents as a JSON object",
      "displayOptions": {
        "hide": {
          "container": [
            ""
          ],
          "item": [
            ""
          ]
        },
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "update"
          ]
        }
      },
      "required": true,
      "routing": {
        "send": {
          "preSend": [
            null
          ]
        }
      },
      "type": "json"
    },
    {
      "displayName": "Additional Fields",
      "name": "additionalFields",
      "default": {},
      "displayOptions": {
        "hide": {
          "container": [
            ""
          ],
          "item": [
            ""
          ]
        },
        "show": {
          "resource": [
            "item"
          ],
          "operation": [
            "update"
          ]
        }
      },
      "options": [
        {
          "displayName": "Partition Key",
          "name": "partitionKey",
          "type": "string",
          "hint": "Only required if a custom partition key is set for the container",
          "default": ""
        }
      ],
      "placeholder": "Add Partition Key",
      "type": "collection"
    },
    {
      "displayName": "Request Options",
      "name": "requestOptions",
      "type": "collection",
      "isNodeSetting": true,
      "placeholder": "Add Option",
      "default": {},
      "options": [
        {
          "displayName": "Batching",
          "name": "batching",
          "placeholder": "Add Batching",
          "type": "fixedCollection",
          "typeOptions": {
            "multipleValues": false
          },
          "default": {
            "batch": {}
          },
          "options": [
            {
              "displayName": "Batching",
              "name": "batch",
              "values": [
                {
                  "displayName": "Items per Batch",
                  "name": "batchSize",
                  "type": "number",
                  "typeOptions": {
                    "minValue": -1
                  },
                  "default": 50,
                  "description": "Input will be split in batches to throttle requests. -1 for disabled. 0 will be treated as 1."
                },
                {
                  "displayName": "Batch Interval (ms)",
                  "name": "batchInterval",
                  "type": "number",
                  "typeOptions": {
                    "minValue": 0
                  },
                  "default": 1000,
                  "description": "Time (in milliseconds) between each batch of requests. 0 for disabled."
                }
              ]
            }
          ]
        },
        {
          "displayName": "Ignore SSL Issues (Insecure)",
          "name": "allowUnauthorizedCerts",
          "type": "boolean",
          "noDataExpression": true,
          "default": false,
          "description": "Whether to accept the response even if SSL certificate validation is not possible"
        },
        {
          "displayName": "Proxy",
          "name": "proxy",
          "type": "string",
          "default": "",
          "placeholder": "e.g. http://myproxy:3128",
          "description": "HTTP proxy to use. If authentication is required it can be defined as follow: http://username:password@myproxy:3128"
        },
        {
          "displayName": "Timeout",
          "name": "timeout",
          "type": "number",
          "typeOptions": {
            "minValue": 1
          },
          "default": 10000,
          "description": "Time in ms to wait for the server to send response headers (and start the response body) before aborting the request"
        }
      ]
    }
  ],
  "codex": {
    "categories": [
      "Data & Storage"
    ],
    "resources": {
      "primaryDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.azurecosmosdb/"
        }
      ],
      "credentialDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/credentials/azurecosmosdb/"
        }
      ]
    }
  },
  "iconUrl": {
    "light": "icons/n8n-nodes-base/dist/nodes/Microsoft/AzureCosmosDb/AzureCosmosDb.svg",
    "dark": "icons/n8n-nodes-base/dist/nodes/Microsoft/AzureCosmosDb/AzureCosmosDb.svg"
  },
  "name": "n8n-nodes-base.azureCosmosDb"
}