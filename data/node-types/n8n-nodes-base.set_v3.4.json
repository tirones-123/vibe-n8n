{
  "displayName": "Edit Fields (Set)",
  "icon": "fa:pen",
  "group": [
    "input"
  ],
  "description": "Modify, add, or remove item fields",
  "defaultVersion": 3.4,
  "iconColor": "blue",
  "version": [
    3,
    3.1,
    3.2,
    3.3,
    3.4
  ],
  "subtitle": "={{$parameter[\"mode\"]}}",
  "defaults": {
    "name": "Edit Fields"
  },
  "inputs": [
    "main"
  ],
  "outputs": [
    "main"
  ],
  "properties": [
    {
      "displayName": "Mode",
      "name": "mode",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Manual Mapping",
          "value": "manual",
          "description": "Edit item fields one by one",
          "action": "Edit item fields one by one"
        },
        {
          "name": "JSON",
          "value": "raw",
          "description": "Customize item output with JSON",
          "action": "Customize item output with JSON"
        }
      ],
      "default": "manual"
    },
    {
      "displayName": "Duplicate Item",
      "name": "duplicateItem",
      "type": "boolean",
      "default": false,
      "isNodeSetting": true
    },
    {
      "displayName": "Duplicate Item Count",
      "name": "duplicateCount",
      "type": "number",
      "default": 0,
      "typeOptions": {
        "minValue": 0
      },
      "description": "How many times the item should be duplicated, mainly used for testing and debugging",
      "isNodeSetting": true,
      "displayOptions": {
        "show": {
          "duplicateItem": [
            true
          ]
        }
      }
    },
    {
      "displayName": "Item duplication is set in the node settings. This option will be ignored when the workflow runs automatically.",
      "name": "duplicateWarning",
      "type": "notice",
      "default": "",
      "displayOptions": {
        "show": {
          "duplicateItem": [
            true
          ]
        }
      }
    },
    {
      "displayName": "JSON",
      "name": "jsonOutput",
      "type": "json",
      "typeOptions": {
        "rows": 5
      },
      "default": "{\n  \"my_field_1\": \"value\",\n  \"my_field_2\": 1\n}\n",
      "validateType": "object",
      "ignoreValidationDuringExecution": true,
      "displayOptions": {
        "show": {
          "mode": [
            "raw"
          ]
        }
      }
    },
    {
      "displayName": "Fields to Set",
      "name": "fields",
      "placeholder": "Add Field",
      "type": "fixedCollection",
      "description": "Edit existing fields or add new ones to modify the output data",
      "displayOptions": {
        "show": {
          "@version": [
            3,
            3.1,
            3.2
          ],
          "mode": [
            "manual"
          ]
        }
      },
      "typeOptions": {
        "multipleValues": true,
        "sortable": true
      },
      "default": {},
      "options": [
        {
          "name": "values",
          "displayName": "Values",
          "values": [
            {
              "displayName": "Name",
              "name": "name",
              "type": "string",
              "default": "",
              "placeholder": "e.g. fieldName",
              "description": "Name of the field to set the value of. Supports dot-notation. Example: data.person[0].name.",
              "requiresDataPath": "single"
            },
            {
              "displayName": "Type",
              "name": "type",
              "type": "options",
              "description": "The field value type",
              "options": [
                {
                  "name": "String",
                  "value": "stringValue"
                },
                {
                  "name": "Number",
                  "value": "numberValue"
                },
                {
                  "name": "Boolean",
                  "value": "booleanValue"
                },
                {
                  "name": "Array",
                  "value": "arrayValue"
                },
                {
                  "name": "Object",
                  "value": "objectValue"
                }
              ],
              "default": "stringValue"
            },
            {
              "displayName": "Value",
              "name": "stringValue",
              "type": "string",
              "default": "",
              "displayOptions": {
                "show": {
                  "type": [
                    "stringValue"
                  ]
                }
              },
              "validateType": "string",
              "ignoreValidationDuringExecution": true
            },
            {
              "displayName": "Value",
              "name": "numberValue",
              "type": "string",
              "default": "",
              "displayOptions": {
                "show": {
                  "type": [
                    "numberValue"
                  ]
                }
              },
              "validateType": "number",
              "ignoreValidationDuringExecution": true
            },
            {
              "displayName": "Value",
              "name": "booleanValue",
              "type": "options",
              "default": "true",
              "options": [
                {
                  "name": "True",
                  "value": "true"
                },
                {
                  "name": "False",
                  "value": "false"
                }
              ],
              "displayOptions": {
                "show": {
                  "type": [
                    "booleanValue"
                  ]
                }
              },
              "validateType": "boolean",
              "ignoreValidationDuringExecution": true
            },
            {
              "displayName": "Value",
              "name": "arrayValue",
              "type": "string",
              "default": "",
              "placeholder": "e.g. [ arrayItem1, arrayItem2, arrayItem3 ]",
              "displayOptions": {
                "show": {
                  "type": [
                    "arrayValue"
                  ]
                }
              },
              "validateType": "array",
              "ignoreValidationDuringExecution": true
            },
            {
              "displayName": "Value",
              "name": "objectValue",
              "type": "json",
              "default": "={}",
              "typeOptions": {
                "rows": 2
              },
              "displayOptions": {
                "show": {
                  "type": [
                    "objectValue"
                  ]
                }
              },
              "validateType": "object",
              "ignoreValidationDuringExecution": true
            }
          ]
        }
      ]
    },
    {
      "displayName": "Fields to Set",
      "name": "assignments",
      "type": "assignmentCollection",
      "displayOptions": {
        "hide": {
          "@version": [
            3,
            3.1,
            3.2
          ]
        },
        "show": {
          "mode": [
            "manual"
          ]
        }
      },
      "default": {}
    },
    {
      "displayName": "Include in Output",
      "name": "include",
      "type": "options",
      "description": "How to select the fields you want to include in your output items",
      "default": "all",
      "displayOptions": {
        "show": {
          "@version": [
            3,
            3.1,
            3.2
          ]
        }
      },
      "options": [
        {
          "name": "All Input Fields",
          "value": "all",
          "description": "Also include all unchanged fields from the input"
        },
        {
          "name": "No Input Fields",
          "value": "none",
          "description": "Include only the fields specified above"
        },
        {
          "name": "Selected Input Fields",
          "value": "selected",
          "description": "Also include the fields listed in the parameter “Fields to Include”"
        },
        {
          "name": "All Input Fields Except",
          "value": "except",
          "description": "Exclude the fields listed in the parameter “Fields to Exclude”"
        }
      ]
    },
    {
      "displayName": "Include Other Input Fields",
      "name": "includeOtherFields",
      "type": "boolean",
      "default": false,
      "description": "Whether to pass to the output all the input fields (along with the fields set in 'Fields to Set')",
      "displayOptions": {
        "hide": {
          "@version": [
            3,
            3.1,
            3.2
          ]
        }
      }
    },
    {
      "displayName": "Input Fields to Include",
      "name": "include",
      "type": "options",
      "description": "How to select the fields you want to include in your output items",
      "default": "all",
      "displayOptions": {
        "hide": {
          "@version": [
            3,
            3.1,
            3.2
          ],
          "/includeOtherFields": [
            false
          ]
        }
      },
      "options": [
        {
          "name": "All",
          "value": "all",
          "description": "Also include all unchanged fields from the input"
        },
        {
          "name": "Selected",
          "value": "selected",
          "description": "Also include the fields listed in the parameter “Fields to Include”"
        },
        {
          "name": "All Except",
          "value": "except",
          "description": "Exclude the fields listed in the parameter “Fields to Exclude”"
        }
      ]
    },
    {
      "displayName": "Fields to Include",
      "name": "includeFields",
      "type": "string",
      "default": "",
      "placeholder": "e.g. fieldToInclude1,fieldToInclude2",
      "description": "Comma-separated list of the field names you want to include in the output. You can drag the selected fields from the input panel.",
      "requiresDataPath": "multiple",
      "displayOptions": {
        "show": {
          "include": [
            "selected"
          ],
          "@version": [
            3,
            3.1,
            3.2
          ]
        }
      }
    },
    {
      "displayName": "Fields to Exclude",
      "name": "excludeFields",
      "type": "string",
      "default": "",
      "placeholder": "e.g. fieldToExclude1,fieldToExclude2",
      "description": "Comma-separated list of the field names you want to exclude from the output. You can drag the selected fields from the input panel.",
      "requiresDataPath": "multiple",
      "displayOptions": {
        "show": {
          "include": [
            "except"
          ],
          "@version": [
            3,
            3.1,
            3.2
          ]
        }
      }
    },
    {
      "displayName": "Fields to Include",
      "name": "includeFields",
      "type": "string",
      "default": "",
      "placeholder": "e.g. fieldToInclude1,fieldToInclude2",
      "description": "Comma-separated list of the field names you want to include in the output. You can drag the selected fields from the input panel.",
      "requiresDataPath": "multiple",
      "displayOptions": {
        "show": {
          "include": [
            "selected"
          ],
          "/includeOtherFields": [
            true
          ]
        },
        "hide": {
          "@version": [
            3,
            3.1,
            3.2
          ]
        }
      }
    },
    {
      "displayName": "Fields to Exclude",
      "name": "excludeFields",
      "type": "string",
      "default": "",
      "placeholder": "e.g. fieldToExclude1,fieldToExclude2",
      "description": "Comma-separated list of the field names you want to exclude from the output. You can drag the selected fields from the input panel.",
      "requiresDataPath": "multiple",
      "displayOptions": {
        "show": {
          "include": [
            "except"
          ],
          "/includeOtherFields": [
            true
          ]
        },
        "hide": {
          "@version": [
            3,
            3.1,
            3.2
          ]
        }
      }
    },
    {
      "displayName": "Options",
      "name": "options",
      "type": "collection",
      "placeholder": "Add option",
      "default": {},
      "options": [
        {
          "displayName": "Include Binary File",
          "name": "includeBinary",
          "type": "boolean",
          "default": true,
          "displayOptions": {
            "hide": {
              "@version": [
                {
                  "_cnd": {
                    "gte": 3.4
                  }
                }
              ]
            }
          },
          "description": "Whether binary data should be included if present in the input item"
        },
        {
          "displayName": "Strip Binary Data",
          "name": "stripBinary",
          "type": "boolean",
          "default": true,
          "description": "Whether binary data should be stripped from the input item. Only applies when \"Include Other Input Fields\" is enabled.",
          "displayOptions": {
            "show": {
              "@version": [
                {
                  "_cnd": {
                    "gte": 3.4
                  }
                }
              ],
              "/includeOtherFields": [
                true
              ]
            }
          }
        },
        {
          "displayName": "Ignore Type Conversion Errors",
          "name": "ignoreConversionErrors",
          "type": "boolean",
          "default": false,
          "description": "Whether to ignore field type errors and apply a less strict type conversion",
          "displayOptions": {
            "show": {
              "/mode": [
                "manual"
              ]
            }
          }
        },
        {
          "displayName": "Support Dot Notation",
          "name": "dotNotation",
          "type": "boolean",
          "default": true,
          "description": "By default, dot-notation is used in property names. This means that \"a.b\" will set the property \"b\" underneath \"a\" so { \"a\": { \"b\": value} }. If that is not intended this can be deactivated, it will then set { \"a.b\": value } instead."
        }
      ]
    }
  ],
  "codex": {
    "categories": [
      "Core Nodes"
    ],
    "subcategories": {
      "Core Nodes": [
        "Data Transformation"
      ]
    },
    "alias": [
      "Set",
      "JS",
      "JSON",
      "Filter",
      "Transform",
      "Map"
    ],
    "resources": {
      "primaryDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.set/"
        }
      ]
    }
  },
  "name": "n8n-nodes-base.set"
}