{
  "displayName": "Metabase Tool",
  "group": [
    "transform"
  ],
  "version": 1,
  "subtitle": "={{$parameter[\"operation\"] + \": \" + $parameter[\"resource\"]}}",
  "description": "Use the Metabase API",
  "defaults": {
    "name": "Metabase"
  },
  "inputs": [],
  "outputs": [
    "ai_tool"
  ],
  "credentials": [
    {
      "name": "metabaseApi",
      "required": true
    }
  ],
  "requestDefaults": {
    "returnFullResponse": true,
    "baseURL": "={{$credentials.url.replace(new RegExp(\"/$\"), \"\")}}",
    "headers": {}
  },
  "properties": [
    {
      "displayName": "Tool Description",
      "name": "descriptionType",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Set Automatically",
          "value": "auto",
          "description": "Automatically set based on resource and operation"
        },
        {
          "name": "Set Manually",
          "value": "manual",
          "description": "Manually set the description"
        }
      ],
      "default": "auto"
    },
    {
      "displayName": "Description",
      "name": "toolDescription",
      "type": "string",
      "default": "Use the Metabase API",
      "required": true,
      "typeOptions": {
        "rows": 2
      },
      "description": "Explain to the LLM what this tool does, a good, specific description would allow LLMs to produce expected results much more often",
      "displayOptions": {
        "show": {
          "descriptionType": [
            "manual"
          ]
        }
      }
    },
    {
      "displayName": "Resource",
      "name": "resource",
      "type": "options",
      "noDataExpression": true,
      "options": [
        {
          "name": "Alert",
          "value": "alerts"
        },
        {
          "name": "Database",
          "value": "databases"
        },
        {
          "name": "Metric",
          "value": "metrics"
        },
        {
          "name": "Question",
          "value": "questions"
        },
        {
          "name": "Custom API Call",
          "value": "__CUSTOM_API_CALL__"
        }
      ],
      "default": "questions"
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "noDataExpression": true,
      "displayOptions": {
        "show": {
          "resource": [
            "questions"
          ]
        }
      },
      "options": [
        {
          "name": "Get",
          "value": "get",
          "description": "Get a specific question",
          "routing": {
            "request": {
              "method": "GET",
              "url": "={{\"/api/card/\" + $parameter.questionId}}"
            }
          },
          "action": "Get a questions"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many questions",
          "routing": {
            "request": {
              "method": "GET",
              "url": "/api/card/"
            }
          },
          "action": "Get many questions"
        },
        {
          "name": "Result Data",
          "value": "resultData",
          "description": "Return the result of the question to a specific file format",
          "routing": {
            "request": {
              "method": "POST",
              "url": "={{\"/api/card/\" + $parameter.questionId + \"/query/\" + $parameter.format}}",
              "returnFullResponse": true,
              "encoding": "arraybuffer"
            },
            "output": {
              "postReceive": [
                null
              ]
            }
          },
          "action": "Get the results from a question"
        },
        {
          "name": "Custom API Call",
          "value": "__CUSTOM_API_CALL__"
        }
      ],
      "default": "getAll"
    },
    {
      "displayName": "Question ID",
      "name": "questionId",
      "type": "string",
      "required": true,
      "placeholder": "0",
      "displayOptions": {
        "show": {
          "resource": [
            "questions"
          ],
          "operation": [
            "get",
            "resultData"
          ]
        }
      },
      "default": ""
    },
    {
      "displayName": "Format",
      "name": "format",
      "type": "options",
      "required": true,
      "options": [
        {
          "name": "CSV",
          "value": "csv"
        },
        {
          "name": "JSON",
          "value": "json"
        },
        {
          "name": "XLSX",
          "value": "xlsx"
        }
      ],
      "default": "csv",
      "displayOptions": {
        "show": {
          "resource": [
            "questions"
          ],
          "operation": [
            "resultData"
          ]
        }
      }
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "noDataExpression": true,
      "displayOptions": {
        "show": {
          "resource": [
            "metrics"
          ]
        }
      },
      "options": [
        {
          "name": "Get",
          "value": "get",
          "description": "Get a specific metric",
          "routing": {
            "request": {
              "method": "GET",
              "url": "={{\"/api/metric/\" + $parameter.metricId}}",
              "returnFullResponse": true
            }
          },
          "action": "Get a metric"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many metrics",
          "routing": {
            "request": {
              "method": "GET",
              "url": "/api/metric/"
            }
          },
          "action": "Get many metrics"
        },
        {
          "name": "Custom API Call",
          "value": "__CUSTOM_API_CALL__"
        }
      ],
      "default": "getAll"
    },
    {
      "displayName": "Metric ID",
      "name": "metricId",
      "type": "string",
      "required": true,
      "placeholder": "0",
      "displayOptions": {
        "show": {
          "resource": [
            "metrics"
          ],
          "operation": [
            "get"
          ]
        }
      },
      "default": ""
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "noDataExpression": true,
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ]
        }
      },
      "options": [
        {
          "name": "Add",
          "value": "addNewDatasource",
          "description": "Add a new datasource to the metabase instance",
          "routing": {
            "request": {
              "method": "POST",
              "url": "/api/database"
            }
          },
          "action": "Add a databases"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many databases",
          "routing": {
            "request": {
              "method": "GET",
              "url": "/api/database/"
            },
            "output": {
              "postReceive": [
                {
                  "type": "rootProperty",
                  "properties": {
                    "property": "data"
                  }
                }
              ]
            }
          },
          "action": "Get many databases"
        },
        {
          "name": "Get Fields",
          "value": "getFields",
          "description": "Get fields from database",
          "routing": {
            "request": {
              "method": "GET",
              "url": "={{\"/api/database/\" + $parameter.databaseId + \"/fields\"}}"
            }
          },
          "action": "Get Fields a databases"
        },
        {
          "name": "Custom API Call",
          "value": "__CUSTOM_API_CALL__"
        }
      ],
      "default": "getAll"
    },
    {
      "displayName": "Database ID",
      "name": "databaseId",
      "type": "string",
      "required": true,
      "placeholder": "0",
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "getFields"
          ]
        }
      },
      "default": ""
    },
    {
      "displayName": "Engine",
      "name": "engine",
      "type": "options",
      "required": true,
      "placeholder": "PostgreSQL",
      "options": [
        {
          "name": "H2",
          "value": "h2"
        },
        {
          "name": "MongoDB",
          "value": "mongo"
        },
        {
          "name": "Mysql",
          "value": "mysql"
        },
        {
          "name": "PostgreSQL",
          "value": "postgres"
        },
        {
          "name": "Redshift",
          "value": "redshift"
        },
        {
          "name": "Sqlite",
          "value": "sqlite"
        }
      ],
      "default": "postgres",
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "addNewDatasource"
          ]
        }
      },
      "routing": {
        "send": {
          "property": "engine",
          "type": "body"
        }
      }
    },
    {
      "displayName": "Host",
      "name": "host",
      "type": "string",
      "required": true,
      "placeholder": "localhost:5432",
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "addNewDatasource"
          ],
          "engine": [
            "postgres",
            "redshift",
            "mysql",
            "mongo"
          ]
        }
      },
      "routing": {
        "send": {
          "property": "details.host",
          "type": "body"
        }
      },
      "default": ""
    },
    {
      "displayName": "Name",
      "name": "name",
      "type": "string",
      "required": true,
      "placeholder": "Database 1",
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "addNewDatasource"
          ]
        }
      },
      "routing": {
        "send": {
          "property": "name",
          "type": "body"
        }
      },
      "default": ""
    },
    {
      "displayName": "Port",
      "name": "port",
      "type": "number",
      "required": true,
      "placeholder": "5432",
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "addNewDatasource"
          ],
          "engine": [
            "postgres",
            "redshift",
            "mysql",
            "mongo"
          ]
        }
      },
      "routing": {
        "send": {
          "property": "details.port",
          "type": "body"
        }
      },
      "default": 5432
    },
    {
      "displayName": "User",
      "name": "user",
      "type": "string",
      "required": true,
      "placeholder": "Admin",
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "addNewDatasource"
          ],
          "engine": [
            "postgres",
            "redshift",
            "mysql",
            "mongo"
          ]
        }
      },
      "routing": {
        "send": {
          "property": "details.user",
          "type": "body"
        }
      },
      "default": ""
    },
    {
      "displayName": "Password",
      "name": "password",
      "type": "string",
      "typeOptions": {
        "password": true
      },
      "required": true,
      "placeholder": "password",
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "addNewDatasource"
          ],
          "engine": [
            "postgres",
            "redshift",
            "mysql",
            "mongo"
          ]
        }
      },
      "routing": {
        "send": {
          "property": "details.password",
          "type": "body"
        }
      },
      "default": ""
    },
    {
      "displayName": "Database Name",
      "name": "dbName",
      "type": "string",
      "placeholder": "Users",
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "addNewDatasource"
          ],
          "engine": [
            "postgres",
            "redshift",
            "mysql",
            "mongo"
          ]
        }
      },
      "routing": {
        "send": {
          "property": "details.db",
          "type": "body"
        }
      },
      "default": ""
    },
    {
      "displayName": "File Path",
      "name": "filePath",
      "type": "string",
      "required": true,
      "placeholder": "file:/Users/admin/Desktop/Users",
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "addNewDatasource"
          ],
          "engine": [
            "h2",
            "sqlite"
          ]
        }
      },
      "routing": {
        "send": {
          "property": "details.db",
          "type": "body"
        }
      },
      "default": ""
    },
    {
      "displayName": "Full Sync",
      "name": "fullSync",
      "type": "boolean",
      "required": true,
      "default": true,
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "addNewDatasource"
          ]
        }
      },
      "routing": {
        "send": {
          "property": "is_full_sync",
          "type": "body"
        }
      }
    },
    {
      "displayName": "Simplify",
      "name": "simple",
      "type": "boolean",
      "description": "Whether to return a simplified version of the response instead of the raw data",
      "displayOptions": {
        "show": {
          "resource": [
            "databases"
          ],
          "operation": [
            "getAll"
          ]
        }
      },
      "routing": {
        "output": {
          "postReceive": [
            {
              "type": "setKeyValue",
              "enabled": "={{$value}}",
              "properties": {
                "id": "={{$responseItem.id}}",
                "name": "={{$responseItem.name}}",
                "description": "={{$responseItem.description}}",
                "engine": "={{$responseItem.engine}}",
                "creator_id": "={{$responseItem.creator_id}}",
                "timezone": "={{$responseItem.timezone}}",
                "created_at": "={{$responseItem.created_at}}",
                "updated_at": "={{$responseItem.updated_at}}",
                "db": "={{$responseItem.details.db}}",
                "user": "={{$responseItem.details.user}}",
                "host": "={{$responseItem.details.host}}",
                "port": "={{$responseItem.details.port}}",
                "ssl": "={{$responseItem.details.ssl}}",
                "is_full_sync": "={{$responseItem.details.is_full_sync}}"
              }
            }
          ]
        }
      },
      "default": true
    },
    {
      "displayName": "Operation",
      "name": "operation",
      "type": "options",
      "noDataExpression": true,
      "displayOptions": {
        "show": {
          "resource": [
            "alerts"
          ]
        }
      },
      "options": [
        {
          "name": "Get",
          "value": "get",
          "description": "Get specific alert",
          "routing": {
            "request": {
              "method": "GET",
              "url": "={{\"/api/alert/\" + $parameter.alertId}}"
            }
          },
          "action": "Get an alert"
        },
        {
          "name": "Get Many",
          "value": "getAll",
          "description": "Get many alerts",
          "routing": {
            "request": {
              "method": "GET",
              "url": "/api/alert/"
            }
          },
          "action": "Get many alerts"
        },
        {
          "name": "Custom API Call",
          "value": "__CUSTOM_API_CALL__"
        }
      ],
      "default": "getAll"
    },
    {
      "displayName": "Alert ID",
      "name": "alertId",
      "type": "string",
      "required": true,
      "placeholder": "0",
      "displayOptions": {
        "show": {
          "resource": [
            "alerts"
          ],
          "operation": [
            "get"
          ]
        }
      },
      "default": ""
    },
    {
      "displayName": "Request Options",
      "name": "requestOptions",
      "type": "collection",
      "isNodeSetting": true,
      "placeholder": "Add Option",
      "default": {},
      "options": [
        {
          "displayName": "Batching",
          "name": "batching",
          "placeholder": "Add Batching",
          "type": "fixedCollection",
          "typeOptions": {
            "multipleValues": false
          },
          "default": {
            "batch": {}
          },
          "options": [
            {
              "displayName": "Batching",
              "name": "batch",
              "values": [
                {
                  "displayName": "Items per Batch",
                  "name": "batchSize",
                  "type": "number",
                  "typeOptions": {
                    "minValue": -1
                  },
                  "default": 50,
                  "description": "Input will be split in batches to throttle requests. -1 for disabled. 0 will be treated as 1."
                },
                {
                  "displayName": "Batch Interval (ms)",
                  "name": "batchInterval",
                  "type": "number",
                  "typeOptions": {
                    "minValue": 0
                  },
                  "default": 1000,
                  "description": "Time (in milliseconds) between each batch of requests. 0 for disabled."
                }
              ]
            }
          ]
        },
        {
          "displayName": "Ignore SSL Issues (Insecure)",
          "name": "allowUnauthorizedCerts",
          "type": "boolean",
          "noDataExpression": true,
          "default": false,
          "description": "Whether to accept the response even if SSL certificate validation is not possible"
        },
        {
          "displayName": "Proxy",
          "name": "proxy",
          "type": "string",
          "default": "",
          "placeholder": "e.g. http://myproxy:3128",
          "description": "HTTP proxy to use. If authentication is required it can be defined as follow: http://username:password@myproxy:3128"
        },
        {
          "displayName": "Timeout",
          "name": "timeout",
          "type": "number",
          "typeOptions": {
            "minValue": 1
          },
          "default": 10000,
          "description": "Time in ms to wait for the server to send response headers (and start the response body) before aborting the request"
        }
      ]
    }
  ],
  "codex": {
    "categories": [
      "AI"
    ],
    "subcategories": {
      "AI": [
        "Tools"
      ],
      "Tools": [
        "Other Tools"
      ]
    },
    "resources": {
      "primaryDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/app-nodes/n8n-nodes-base.metabase/"
        }
      ],
      "credentialDocumentation": [
        {
          "url": "https://docs.n8n.io/integrations/builtin/credentials/metabase/"
        }
      ]
    }
  },
  "iconUrl": "icons/n8n-nodes-base/dist/nodes/Metabase/metabase.svg",
  "name": "n8n-nodes-base.metabaseTool"
}